<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ArcGIS Developers 開発リソース集</title>
    <link>https://esrijapan.github.io/arcgis-dev-resources/</link>
    <description>Recent content on ArcGIS Developers 開発リソース集</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language><atom:link href="https://esrijapan.github.io/arcgis-dev-resources/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ArcGIS API for Python のコンセプト</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-concepts/</guid>
      <description>ArcGIS API for Python のコンセプト ArcGIS API for Python (以下、Python API) は、Web GIS (ArcGIS Online / ArcGIS Enterprise) を活用してマップと地理空間データを扱うための Python ベースの API です。
Python のベスト プラクティスに基づき、標準的なイディオムやデータ構造を用いた、シンプルで使いやすい設計になっており、GIS データの可視化や解析の実行だけでなく、ユーザー、グループ、アイテムなどを管理するためのシンプルで使いやすいツールを提供します。 さらに、自身が所有しているデータだけでなく、Esri 等が提供するすぐに使えるマップやデータにアクセスすることも可能です。 また、Pandas や Jupyter Notebook といった、他の Python 向けのライブラリやツールとの連携で、より豊富な機能を活用することが可能です。
 Python API のアーキテクチャ Python API は、Web GIS プラットフォームを使用する目的で実装されています。 Python API には、ArcGIS プラットフォーム上で利用するデータやユーザの認証情報など、各オブジェクトを管理して作業するためのモジュール、クラス、関数、およびタイプがあります。
Python API は arcgis パッケージとして配布されています。 このパッケージの中には、最も基本になる gis モジュールを中心に、Web GIS で使用できる機能がさまざまなモジュールとして編成されています。
Python API のモジュールを表したダイアグラム
gis モジュールは最も重要なモジュールで、Web GIS への入口となり、ユーザー、グループ、およびコンテンツを管理 (作成、読み込み、更新、削除) する機能を提供します。Web GIS の管理者権限をもつユーザーは、自身の組織のメンバー、グループなどの管理にこのモジュールを使用します。</description>
    </item>
    
    <item>
      <title>ArcGIS Maps SDK for JavaScript</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-js/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-js/</guid>
      <description>マップを表示する このチュートリアルでは ArcGIS Maps SDK for JavaScript を使用して、マップとベースマップ レイヤーを表示する方法を紹介します。
マップには、地理データのレイヤーが含まれています。マップには、ベースマップ レイヤーと、オプションで1つ以上のデータレイヤーを追加できます。マップビューを使用し、場所とズームレベルを設定することで、マップの特定の領域を表示できます。
このチュートリアルでは、地形ベースマップレイヤーを使用して、富士山付近を表示する地図を作成します。
前提条件 このチュートリアルを実施するには、以下が必要です。
 API キーにアクセスするための ArcGIS 開発者アカウント  アカウントをお持ちでない場合は、サインアップ（無料）してください。アカウントの作成方法は「開発者アカウントの作成」をご覧ください。    ステップ 新しい Pen の作成 CodePen にアクセスして、マッピングアプリケーション用の新しい Pen を作成します。
HTML の作成 HTML ページを定義して、Web ブラウザのウィンドウの幅と高さをフル利用してマップを作成します。
  CodePen ＞ HTML で、HTML と CSS を追加し、viewDiv 要素を持つページを作成します。viewDiv は地図を表示する要素で、その CSS はブラウザの設定をリセットして、ブラウザの幅と高さをフルに利用できるようにしています。
CodePenでは、&amp;lt;!DOCTYPE html&amp;gt; タグは必要ありません。他のエディタを使用している場合や、ローカルサーバでページを実行している場合は、必ずこのタグを HTML ページの先頭に追加してください。
&amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34; /&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;initial-scale=1, maximum-scale=1, user-scalable=no&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;ArcGIS Maps SDK for JavaScript Tutorials: Display a map&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; html, body, #viewDiv { padding: 0; margin: 0; height: 100%; width: 100%; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;viewDiv&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;   API の参照   &amp;lt;head&amp;gt; タグ内に、CSS ファイルと JS ライブラリへの参照を追加します。</description>
    </item>
    
    <item>
      <title>Esri Japan GitHub</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/learn/github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/learn/github/</guid>
      <description>各 API や SDK のサンプルプログラムに加えて、ハンズオンや開発者セミナーで実施内容を GitHub で共有しています。
ワークショップ  workshops  過去のウェビナーやセミナー、ハンズオンで使用した資料をまとめています。    ArcGIS Maps SDK for JavaScript   maps-app-javascript
 このリポジトリでは、ArcGIS API for JavaScript にて構築された地図アプリをすぐに使用できる Maps App というアプリを提供します。 Maps App をそのまま使うことや、ArcGIS API for JavaScript を使用して拡張することができます。    arcgis-samples-4.0-js
 ArcGIS API 4.x for JavaScript のサンプル集です。Esri Community などで紹介したサンプルなどもございます。    arcgis-samples-js
 ArcGIS API for JavaScript のサンプル集です。    webmap-startup-template-js
 Web マップを使用した開発手法を伝えるためのアプリケーション テンプレートのサンプルです。    ArcGIS Maps SDKs for Native Apps   startup-sample-dotnet</description>
    </item>
    
    <item>
      <title>はじめに</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/get-started/</guid>
      <description>出典：Calcite Design System - Get Started
はじめに Calcite コンポーネントは、Web アプリケーションを構築するための、柔軟でフレームワークに依存しない Web コンポーネントの豊富なライブラリです。Web コンセプトのページ では、Calcite Design System の構成要素について説明しています。
例題、プロパティ、スロット、スタイル、イベント、モードなどの API リファレンスについては、コンポーネント ドキュメントをご覧ください。以下の手順で、Calcite コンポーネントを使い始めることができます。
まず、Calcite コンポーネントを使用するには、ArcGIS アカウントが必要です。アカウントをお持ちでない場合は、無料で作成することができます。
作成方法は、開発者アカウントの作成をご覧ください。
次に、CDN（Content Delivery Network）または NPM（Node Package Manager）ライブラリを使用して、Calcite コンポーネントを読み込みます。
CDN で利用する Calcite コンポーネントをロードする最も一般的な方法は、ArcGIS CDN にホストされているバージョンを使用することです。コンポーネントは、HTML ドキュメントの head セクションに &amp;lt;script&amp;gt; タグを配置することでロードできます:
&amp;lt;script type=&amp;#34;module&amp;#34; src=&amp;#34;https://js.arcgis.com/calcite-components/3.2.1/calcite.esm.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; これらのタグを追加すると、他の HTML 要素と同様にコンポーネントを使用することができます。アプリケーションで使用されるコンポーネントのみが読み込まれます。
NPM パッケージで利用する Calcite コンポーネントは、NPM パッケージとしても提供されています。使い始めるには、まずパッケージをインストールし、以下のステップに従います。また、様々なフレームワークやビルドツールを使用したサンプルはこちらでご覧いただけます。
npm install @esri/calcite-components アセットの読み込み 一部のコンポーネント（例：calcite-icon、calcite-date-picker）は静的リソースに依存しています。デフォルトでは、リソースは CDN から自動的に配信されるため、ほとんどのケースで手動でのパス設定が不要になります。
ローカルにアセットをホストしたい場合やオフライン環境をサポートする必要がある場合は、アセットをプロジェクトのディレクトリにコピーできます。互換性を維持するため、ローカルのアセットは「assets」という名前のディレクトリに配置してください。
例えば、次のコマンドを使用してアセットをコピーできます。
cp -r node_modules/@esri/calcite-components/dist/calcite/assets/* ./public/assets/ アセットが用意できたら、アプリケーション内でアセットのパスを設定してください
import { setAssetPath } from &amp;#34;@esri/calcite-components&amp;#34;; setAssetPath(&amp;#34;/path-to-your-assets/&amp;#34;); スタイルのインポート 最後に、カスケーディング スタイル シート（CSS）を読み込みます。これもフレームワークやビルド ツールに依存しますが、多くの場合、JavaScript で直接読み込むことができます。</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/android/install-android-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/android/install-android-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for Kotlin - Guide - Install and set up
このインストール ガイドでは、ArcGIS Maps SDK for Kotlin (バージョン 200.x) のインストールとセットアップ手順を紹介します。マップを表示する方法については「アプリの作成」のチュートリアルをご覧ください。
ArcGIS Maps SDK for Kotlin をインストールする前に、開発マシンがシステム要件を満たしていることを確認してください。アプリを実行するすべてのターゲット デバイスには、Android API レベルの最小バージョンが必要です。詳細については、システム要件を参照してください。
Gradle を使用してインストールすることをお勧めします。これにより、Esri の Maven リポジトリから必要な依存関係と SDK バイナリーがインストールされます。
Gradle で API を取得する Android Studio で [New Project] ウィザードを実行する際、[Phone and Tablet]、[Empty Activity] の順に選択します。Empty Activity オプションは Compose 対応アプリを作成するために必要な Android からの Jetpack Compose 依存関係を提供します。
Android Studio の [New Project] ウィザードで作成したプロジェクトで、次のセットアップ手順を実行します。
  プロジェクト ツール ウィンドウで、ドロップダウン メニューから [Android ビュー]を選択します。[Gradle Scripts] &amp;gt; [build.</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/install-dotnet-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/install-dotnet-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for .NET - Guide - Install and set up
このインストール ガイドでは、ArcGIS Maps SDK for .NET (バージョン 200.x) のインストールとセットアップ手順を紹介します。マップを表示する方法については「アプリの作成」のチュートリアルをご覧ください。
インストールとセットアップ ArcGIS Maps の機能を .NET アプリケーションに組み込むには、1 つ以上の ArcGIS Maps SDK for .NET NuGet パッケージ への参照を Visual Studio プロジェクト内に追加します。ArcGIS Maps SDK for .NET がサポートするアプリケーション プラットフォームおよび UI フレームワークのそれぞれに対応するプロジェクト テンプレート セットは、Visual Studio 拡張機能 として提供されています。
プロジェクトでの ArcGIS Maps SDK for .NET の参照 ArcGIS Maps SDK for .NET NuGet パッケージは、NuGet.org でホストされています。NuGet を使用して Visual Studio でパッケージを使用するには、Microsoft のドキュメントにある Visual Studio にパッケージをインストールして使用する (Windows) または Visual Studio にパッケージをインストールして使用する (Mac) を参照してください。</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/flutter/install-flutter-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/flutter/install-flutter-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for Flutter - Guide - Install and set up
このインストール ガイドでは、ArcGIS Maps SDK for Flutter (バージョン 200.x) のインストールとセットアップ手順を紹介します。マップを表示する方法については「アプリの作成」のチュートリアルをご覧ください。
ArcGIS Maps SDK for Flutter をインストールする前に、開発マシンが 動作環境 を満たしていることを確認してください。
Flutter パッケージ リポジトリ ArcGIS Maps SDK for Flutter は、Flutter のパッケージ リポジトリである pub.dev を使用して、VS Code で Flutter プロジェクトに統合することができます。
VS Code   VS Code で Flutter プロジェクトを開きます。
  View &amp;gt; Terminal を開きます。
  プロジェクトの依存関係に arcgis_maps パッケージを追加します。
dart pub add arcgis_maps  dart pub add は、arcgis_maps パッケージを依存関係として pubspec.</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/install-ios-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/install-ios-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for Swift - Guide - Install and set up
このインストール ガイドでは、ArcGIS Maps SDK for Swift (バージョン 200.x) のインストールとセットアップ手順を紹介します。マップを表示する方法については「アプリの作成」のチュートリアルをご覧ください。
Swift Package Manager Swift Package Manager を使用して Xcode プロジェクトに簡単に統合できます。
Xcode 16 での手順
 Xcode プロジェクトを開きます。メニューバーで、[File] &amp;gt; [Add Package Dependencies&amp;hellip;] を選択します。   パッケージ リポジトリの URL として https://github.com/esri/arcgis-maps-sdk-swift を入力します。
  オプションとして、正確なバージョンまたは使用するバージョンの範囲を指定したい場合は、Dependency Rule オプションを選択します。
  [Add Package] をクリックします。
  [Add to Target] リストからアプリを選択します。[Add Package] をクリックします。
  ターゲットでアプリを選択します。[Frameworks, Libraries, and Embedded Content] で + 記号をクリックし、&amp;ldquo;ArcGIS&amp;rdquo; がまだ存在しない場合は追加します。  ArcGIS の API を使用するには、次のインポートステートメントを任意の Swift コード（.</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/unity/install-and-set-up/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/unity/install-and-set-up/</guid>
      <description>出典：ArcGIS Maps SDK for Unity - Guide - Install and set up
このインストール ガイドでは、ArcGIS Maps SDK for Unity のインストールとセットアップ手順を紹介します。マップを表示する方法については「アプリの作成」のチュートリアルをご覧ください。
インストールおよびセットアップ方法 ArcGIS Maps SDK for Unity は Unity 用のプラグインです。ArcGIS Maps SDK for Unity を使用して ArcGIS の実世界のマップや 3D コンテンツを使用した 3D GIS アプリケーションを作成するには、Unity プロジェクトを準備する必要があります。作業を開始する前に、必ずプラグインをダウンロードしてください。
Unity のインストール このプラグインは Unity 2022.3.x と Unity 6 でサポートしています。インストールされていない場合は、Unity をインストールしてください。
プラグインのインストール ArcGIS Maps SDK for Unity を使用するには、新規プロジェクトまたは既存プロジェクト (英語) のいずれかにプラグインをインストールします。
シーン設定オプションの選択 プラグインには、シーン内で ArcGIS データやその他の地理空間コンテンツを使用するための 3 つのオプションが用意されています。
 Map Creator UI では、コードを記述せずにシーンを作成できます。 Components では、シーン内のゲーム オブジェクトにアタッチできます。 C# API では、プラグインのソース コードを変更することでカスタマイズ オプションを提供します。  追加のダウンロード ダウンロード ページから、開発者向けドキュメントをアーカイブ形式としてダウンロードできます。ドキュメントには、開発者ガイド、API リファレンス、チュートリアル、サンプル ドキュメントが含まれています。アーカイブには、インターネットに接続しなくてもドキュメントにアクセスできるように、ローカルの Web サーバーからドキュメントにアクセスする手順が記述されています。このドキュメントは、ローカルのコンピュータまたは内部ネットワーク上で実行するように設計されており、公共のインターネット上では実行できません。</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/unreal-engine/install-and-set-up/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/unreal-engine/install-and-set-up/</guid>
      <description>出典：ArcGIS Maps SDK for Unreal Engine - Guide - Install and setup
このインストール ガイドでは、ArcGIS Maps SDK for Unreal Engine のインストールとセットアップ手順を紹介します。マップを表示する方法については「アプリの作成」のチュートリアルをご覧ください。
インストールおよびセットアップ方法 ArcGIS Maps SDK for Unreal Engine は Unreal Engine 用のプラグインです。ArcGIS Maps SDK for Unreal Engine を使用して ArcGIS の実世界のマップや 3D コンテンツを使用した 3D GIS アプリケーションを作成するには、Unreal プロジェクトを準備する必要があります。作業を開始する前に、必ずプラグインをダウンロードしてください。
Unreal Engine のインストール このプラグインは、Unreal Engine 5.5、5.4、および 5.3 をサポートしています。インストールされていない場合は、Unreal Engine をインストールしてください。Visual Studio for Unreal Engine の設定については、Unreal Engine 5 のドキュメントを参照してください。
プラグインのインストール ArcGIS Maps SDK for Unreal Engine を使用するには、新規プロジェクトまたは既存プロジェクト (英語) のいずれかにプラグインをインストールします。</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/install-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/install-guide/</guid>
      <description>ArcGIS Web AppBuilder は ArcGIS Online あるいは Portal for ArcGIS に組み込まれた機能として提供されており、ウィジェット（機能）やテーマ（デザイン）を組み合わせることにより、GIS やプログラミングなどの専門知識がなくても誰でも簡単に Web アプリケーションを作成できるソフトウェアです。 Developer Edition（開発者向けエディション）はこれらの機能に加え、開発者のためにウィジェットやテーマを独自に開発するためのフレームワークを提供します。また、作成したアプリケーションをダウンロードし、独自のサーバーにホストすることも可能です。
ここでは、ArcGIS Web AppBuilder (Developer Edition) (以下 Web AppBuilder) のインストール手順を説明します。
 インストール Web AppBuilder の起動 ポータル URL の指定 アプリケーション ID の設定 インストールの確認  インストール  Web AppBuilder の ZIP ファイルをローカルにダウンロードし、解凍します。
サインイン ページが表示される場合は、ArcGIS Developers 開発者アカウント（あるいは ArcGIS Online 組織向けプランのアカウント）のユーザー名およびパスワードを入力しサインインします。 Web AppBuilder は Node.js 上で動作するため、インストールする端末に Node.js が必要です。Web AppBuilder のインストール ファイルには Windows バージョンの Node.js が含まれていますが、Mac や Linux など他の OS をお使いの場合は Web AppBuilder を起動する前に Node.</description>
    </item>
    
    <item>
      <title>データ可視化のワークフロー</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/workflow-with-arcgis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/workflow-with-arcgis/</guid>
      <description>ArcGIS 開発者向けクラウド サービス（ArcGIS for Developers）で提供されているビジュアライゼーション ツール（マップ ビューアー）を使用した地図上でのデータ可視化のプロセスを紹介します。最終的には地図作成にとどまらず、サードパーティのチャートなどのコンポーネントを組み合わせたアプリ開発をゴールとしています。
本ワークフローで伝える方法はあくまで作成済みのデータに簡単な加工を施して可視化を行うことをクラウド上で実施することを前提としています。よって、デスクトップ GIS ソフトウェアなどを使ったデータ編集は除外しています。
ワークフロー ５ステップをベースに、各ステップで使用するツールやプラットフォームとその簡単な使用方法を以下で紹介していきます。
 データ取得   データ可視化のテーマとなるデータを取得します。  データ加工   取得したデータを地図上にプロットします。必要に応じてデータ変換を行います。  データ処理   必要に応じてテーマとなるデータをもとに解析処理を施します。  グラフィック表現   可視化対象であるデータをテーマに従って表現を加えます。  アプリ作成/ページ埋め込み   ステップ４までに作成した Web マップをページ上に表示し、データ可視化によるテーマを伝えるためにページの編集を行います。  以下は上記５ステップをチャートで表現した図です。必ずしもすべてのステップを踏む必要はなく、また柔軟なアウトプットを行うために開発が担う作業範囲を大きくすることも考えられますが、ここでは、もっとも簡易で効率的な手段として、ステップ４までのプロセスをクラウド上で完了できるようなフローを紹介します。
データ取得 ArcGIS のクラウド サービスが提供するビジュアライゼーション ツールではさまざまなデータ形式をサポートしており、異なる形式のデータをインポートし、地図上に可視化することができます。
サポートするデータ形式は以下の通りです。
 ArcGIS Server サービス（GeoServices） シェープファイル GeoJSON CSV TXT GPX GeoRSS KML OGC  上記の形式で座標情報あるいは住所情報があればお好きなデータ カタログから取得したデータをすぐに地図上に可視化できます。特に ArcGIS Web サービスを使うことで、動的な属性/空間検索が可能な API を経由したデータ可視化が可能なため、より柔軟な可視化に対応できます。
以下は、ArcGIS Web サービスを配信しているデータ元の参考です。</description>
    </item>
    
    <item>
      <title>概要</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/overview/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript-Get started - Overview
ArcGIS Maps SDK for JavaScript を使用してアプリケーションを構築する場合、複数の選択肢があり、それぞれの目的や要件に応じて利点が異なります。小規模なプロジェクトでは、ArcGIS Content Delivery Network (CDN) を利用するのが最適な方法です。最新の JavaScript フレームワークやビルド ツールを使用して構築された大規模または複雑なアプリケーションでは、npm からコンポーネント パッケージをインストールするのが最も良い方法です。
CDN ArcGIS CDN を使用すると、ローカルにパッケージをインストールしなくても、アプリケーションに SDK の機能を簡単に組み込むことができます。これは、シンプルなアプリケーションや迅速なプロトタイピング、または最適化されたクラウド キャッシングを活用してモジュールのダウンロードを高速化したい場合に最適です。
npm より複雑なアプリケーション、特に最新のビルド ツールや React、Vue、Angular のような JavaScript フレームワークでアプリケーションを構築する場合は、JavaScript Maps SDK を npm 経由でインストールすることをお勧めします。これにより、npm のパッケージ管理機能を利用してあらゆるパッケージをプロジェクトの依存関係として管理できるようになり、Webpack や Vite のような最新のビルド ツールとよりシームレスに統合することができます。JavaScript Maps SDK の各コンポーネント パッケージはフレームワークに依存しないように設計されており、ほとんどの JavaScript フレームワークまたはフレームワークなしでも互換性があります。
CSS SDK をアプリケーションに読み込む方法によっては、追加の CSS リンクを含める必要があります。 CDN からコンポーネントを使用している場合、CSS リンクは自動的に含まれます。 npm を使用している場合は、アプリケーションに CSS ファイルを手動でインポートする必要があります。
コンポーネント     コンポーネント スタイルシート コア API スタイルシート Calcite スタイルシート     npm マニュアル マニュアル マニュアル   CDN オート マニュアル オート    コア API     コア API スタイルシート Calcite スタイルシート     npm マニュアル オート   CDN マニュアル オート    アクセス トークン 注 : アプリケーションが認証に ArcGIS アイデンティティのみを使用している場合は、このセクションをスキップできます。詳細については、security and authentication documentation を参照してください。</description>
    </item>
    
    <item>
      <title>開発の手順</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/get-started/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Get Started
ArcGIS Maps SDK for JavaScript には、コア API と、API の機能をすぐに使用できる UI 要素にカプセル化する Web コンポーネント ライブラリーのセットが含まれています。アプリケーションのニーズに応じて、4 つのコンポーネント ライブラリー（Map、Coding、Charts、Embeddable）のどれからでもコンポーネントを使用することができます。また、SDK は Esri の Calcite Design System と統合され、一貫性のある利用しやすいユーザー エクスペリエンスを提供します。Calcite は、Web コンポーネント、アイコン、配色、デザイン パターンの豊富なライブラリーを含む、完全な UI ツールキットを提供します。
JavaScript Maps SDK の使い始めは、目的や要件によって異なります。ローカル パッケージをインストールせずにバニラ JavaScript と HTML アプリを構築したい場合は、CDN を利用することができます。より構造化された、またはスケーラブルな Web アプリケーション、特にフロントエンド フレームワークやビルド ツールを使用する場合は、npm で SDK をインストールすることを検討してください。
 コードの例：ArcGIS Maps SDK for JavaScript コア API とマップ コンポーネント テンプレート プロジェクトをチェックして、すぐに始めまられます。
 CDN Vite React Angular Vue   CDN JavaScript Maps SDK は、ArcGIS CDN を使用して、バニラ JavaScript および HTML アプリケーションに簡単に統合できます。このアプローチでは、最適化されたクラウド キャッシングを活用することで、ローカル ビルドの必要性をなくし、SDK の最新バージョンへの更新を容易にします。</description>
    </item>
    
    <item>
      <title>開発者アカウントの作成</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/get-dev-account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/get-dev-account/</guid>
      <description>開発者アカウントを作成すると、アプリの開発を無償で開始することができます。また、ArcGIS Location Platform が提供するロケーションサービスであるベースマップの利用やジオコーディング サービス (住所⇄緯度経度)、ネットワーク サービス (ルート検索、到達圏解析) などの様々な GIS サービスを利用したり、お手持ちのデータを GIS サービスとして配信したりすることが、無料枠/月の範囲で利用可能です。
ArcGIS Location Platform アカウントの作成 以下の手順で ArcGIS Location Platform の新規アカウントを作成します。アカウントの作成中に問題が発生した場合は、ESRI ジャパンまでお問い合わせください。
  ArcGIS Location Platform のサイト (英語) にアクセスし、[Sign Up For Free] をクリックします。
  名前 (※名前には半角英字のみを使用してください)、E メールアドレス、メールの配信に関する設定を入力し [Continue] をクリックします。
  ユーザー名、パスワード、ポータル URL、組織名、秘密の質問とその答えを入力します。
  利用規約とプライバシー ポリシーに同意する場合は、同意欄にチェックを入れ、[Next] をクリックします。
  手順 2 にて入力した、E メールアドレスの受信ボックスに届いた Esri からのメールを開き、メール本文にある [Activeate your account] をクリックします。
  以上で ArcGIS Location Platform アカウントの作成は完了です。</description>
    </item>
    
    <item>
      <title>API キーの取得</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/get-api-key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/get-api-key/</guid>
      <description>出典：Security and authentication guide - Tutorial: Create an API key
APIキーの認証情報を使用してAPIキーを作成し、管理する方法を学びます。
API キーとは API キーは、ArcGIS の安全なサービス、コンテンツ、および機能へのアクセスをアプリケーションに許可する、長期間のアクセス トークンです。API キーは、ポータルでホストされているアイテムの一種である API キーの認証情報を使用して生成されます。API キーの認証情報には、API キーを生成し、その権限や有効期限などのプロパティを管理するための設定が含まれています。 API キーの認証情報を作成し、アプリケーションで API キーを使用するプロセスは、API キー認証として知られています。
このガイドでは、APIキーの認証情報を作成し、以下のことを行う方法を説明します。
 長期的な API キーを生成し、アプリケーションに保存 API キーが ArcGIS のサービス、コンテンツ、および機能にアクセスできる権限の設定 API キーの有効期限と参照元 URL の設定 API キーの認証情報のアイテムページを使用した、API キーの管理  API キーの詳細については Introduction to API key authentication (英語) をご参照ください。
前提条件  ArcGIS Location Platform アカウントまたは ArcGIS Online アカウントが必要です。ArcGIS Online アカウントをお持ちの場合は、アカウントに管理者権限または API キーの生成権限を持つカスタム ロールが設定されている必要があります。詳細については、Limitations を参照してください。 アプリケーションに必要な権限を確認します。詳細は Privileges を参照してください。  API キーの作成手順 ポータルにサイン イン APIキーの認証情報を含むアイテムの作成と管理にはポータルを使用します。</description>
    </item>
    
    <item>
      <title>ArcGIS API for Python のための基礎環境：Conda入門</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-conda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-conda/</guid>
      <description>出典：ArcGIS API for Python - Understanding Conda
ArcGIS API for Python (以下、Python API) を使用する際、Conda を利用すると Python の環境やパッケージを管理することが容易になります。
Conda の基本について説明します。Conda は Python と Python で使用できるライブラリのインストールやバージョンを管理するためのツールです。 Conda を使用する場合、次の 2 つの選択肢があります。
 Anaconda Distribution : Python とデータサイエンス向けの Python パッケージなどを提供するプラットフォームです (以下、Anaconda)。 Miniconda : Anaconda をコンパクトにしたもので、Python、Conda、それらの依存パッケージ、その他の最小限のパッケージをインストールします。ArcGIS Pro をインストールした場合、Miniconda も同時にインストールされます。  Anaconda と Miniconda の詳しい違いは Anaconda or Miniconda (英語) のページをご覧ください。
Conda の基本 Conda を理解する最も簡単な方法は、チュートリアルに取り組むことです。 以下のセクションでは、ArcGIS API for Python を使用するために必要なコマンドの概要について説明します。
Condaは プラットフォームに依存しないパッケージ マネージャー アプリケーションで、Python パッケージのインストールや更新、削除などを行うことができます。パッケージは、チャネルと呼ばれるさまざまなリポジトリに保存されているソフトウェアとサポートファイルのバンドルです。チャネルは、Anaconda Cloud のようなクラウド ロケーションのデフォルト セットである場合もあれば、個人や組織が作成したプライベート リポジトリである場合もあります。Conda は、パッケージのリストアップやインストールを行う際に、デフォルトのチャネルを検索します。特定のチャネルを検索するように Conda を設定する方法など、詳細については Channels を参照してください。</description>
    </item>
    
    <item>
      <title>ArcGIS 開発者コミュニティ</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/learn/developer-community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/learn/developer-community/</guid>
      <description>ESRIジャパンのスタッフが Esri Community 上で開発者、SIer (エスアイヤー)、ポータル管理者向けの技術ブログを発信しています。毎年多くの記事を配信していますので、初めての方は欲しい情報を探す時間が長くなりがちです。年代別にイベント資料やブログ記事を中心に、API/SDK などのカテゴリー別にまとめていますので、参考にしていただければと思います。紹介している内容のレベルの目安として、【基礎】、【応用】 のフラグを付けています。
2025 年  最新の記事についてはこちらから確認していただけます。  2024 年  マッピング &amp;amp; ロケーション開発 (ArcGIS Developers) 2024 振り返り  2023 年  マッピング &amp;amp; ロケーション開発 (ArcGIS Developers) 2023 振り返り  2022 年  マッピング &amp;amp; ロケーション開発 (ArcGIS Developers) 2022 振り返り  2021 年  マッピング &amp;amp; ロケーション開発 (ArcGIS Developers) 2021 振り返り  2020 年  マッピング &amp;amp; ロケーション開発 (ArcGIS for Developers) 2020 振り返り  2019 年  マッピング &amp;amp; ロケーション開発 (ArcGIS for Developers) 2019 振り返り  </description>
    </item>
    
    <item>
      <title>Esri Leaflet</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-esrileaflet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-esrileaflet/</guid>
      <description>マップを表示する このチュートリアルでは、Esri Leaflet と ベースマップ レイヤー サービス を使用して、マップを表示する方法を紹介します。
マップには、ベースマップ レイヤー サービスのベクター タイル ベースマップ レイヤーを使用しています。ベクター タイル ベースマップ レイヤーには、レイヤーをレンダリングするためのスタイル、レイヤー、フォントグリフ(Font Glyphs)、およびアイコンが含まれています。
このチュートリアルでは、ベースマップ レイヤー サービスの地形ベースマップ レイヤーを使用して、富士山周辺の地図を作成します。
マップとレイヤーの詳細については、Mapping and location services のガイドをご覧ください。
前提条件 このチュートリアルを実施するには、以下が必要です。
 開発者ダッシュボードにアクセスして API キーを作成するには、開発者アカウントが必要です。アカウントの作成手順については「開発者アカウントの作成」を参照してください。  ステップ 新しい Pen の作成 CodePen にアクセスして、マッピング アプリケーション用の新しい Pen を作成します。
HTML の作成と各 JS ライブラリへの参照を追加する Leaflet、Esri Leaflet への参照を含む HTML ページを作成します。 これらは、ベクター タイル ベースマップ レイヤーにアクセスして表示するために必要です。
 &amp;lt;head&amp;gt;の中に、ライブラリを参照するための&amp;lt;script&amp;gt;要素を追加します。 &amp;lt;head&amp;gt;に，ページとマップのスタイルを決めるための&amp;lt;style&amp;gt;要素も追加します。 &amp;lt;body&amp;gt;の中に、マップ用の&amp;lt;div&amp;gt;要素を追加します。  &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;initial-scale=1,maximum-scale=1,user-scalable=no&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;Esri Leaflet&amp;lt;/title&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>アプリケーション配布ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/android/distribution-android-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/android/distribution-android-200.x/</guid>
      <description>ArcGIS Maps SDK for Kotlin (バージョン 200.x) を使用して開発したアプリケーションを配布する場合に必要なライセンス認証の手順を説明します。
API キーの設定 ArcGIS Location Platform のロケーション サービスを使用する場合は、アプリで API キーを設定する必要があります。API キーの詳細はAPI キーの取得を、APIキーの設定方法はアプリの作成のAPI キーを設定するをご覧ください。
ライセンス認証のステップ 開発したアプリケーションのライセンス認証のステップは以下の通りです。
  使用するライセンスの選択
  ライセンスの認証方法
 Lite ライセンスの認証方法 Basic ライセンスの認証方法 Standard ライセンスの認証方法 Analysis Extension ライセンスの認証方法 Advanced Editing Extension ライセンスの認証方法    ライセンスの認証
 Lite ライセンスキーを使用した認証 配布パックのライセンス キーを使用した認証 指定ユーザー アカウントを使用した認証    使用するライセンスの選択 ArcGIS Maps SDK for Kotlin には Lite、Basic、Standard の 3 つのライセンス レベルと Analysis エクステンションがあります。開発したアプリケーションが使用する機能に応じて、適切なライセンス レベルを選択してください。</description>
    </item>
    
    <item>
      <title>アプリケーション配布ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/distribution-dotnet-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/distribution-dotnet-200.x/</guid>
      <description>ArcGIS Maps SDK for .NET (バージョン 200.x) を使用して開発したアプリケーションを配布する場合に必要なライセンス認証の手順を説明します。
API キーの設定 ArcGIS Location Platform のロケーションサービスを使用する場合は、アプリで API キーを設定する必要があります。API キーの詳細はAPI キーの取得を、API キーの設定方法はアプリの作成のAPI キーを設定するをご参照ください。
ライセンス認証のステップ 開発したアプリケーションのライセンス認証のステップは以下の通りです。
  使用するライセンスの選択
  ライセンスの認証方法
 Lite ライセンスの認証方法 Basic ライセンスの認証方法 Standard ライセンスの認証方法 Advanced ライセンスの認証方法 Analysis Extension ライセンスの認証方法 Advanced Editing Extension ライセンスの認証方法    ライセンスの認証
 Lite ライセンス キーを使用した認証 配布パックのライセンス キーを使用した認証 指定ユーザー アカウントを使用した認証    使用するライセンスの選択 ArcGIS Maps SDK for .NET には Lite、Basic、Standard、Advanced の 4 つのライセンス レベルと Analysis エクステンションがあります。開発したアプリケーションが使用する機能に応じて、適切なライセンス レベルを選択してください。</description>
    </item>
    
    <item>
      <title>アプリケーション配布ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/flutter/distribution-flutter-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/flutter/distribution-flutter-200.x/</guid>
      <description>ArcGIS Maps SDK for Flutter (バージョン 200.x) を使用して開発したアプリケーションを配布する場合に必要なライセンス認証の手順を説明します。
API キーの設定 ArcGIS Location Platform のロケーション サービスを使用する場合は、アプリで API キーを設定する必要があります。API キーの詳細はAPI キーの取得を、API キーの設定方法はアプリの作成のAPI キーを設定するをご覧ください。
ライセンス認証のステップ 開発したアプリケーションのライセンス認証のステップは以下の通りです。
  使用するライセンスの選択
  ライセンスの認証方法
 Lite ライセンスの認証方法 Basic ライセンスの認証方法 Standard ライセンスの認証方法 Analysis Extension ライセンスの認証方法 Advanced Editing Extension ライセンスの認証方法    ライセンスの認証
 Lite ライセンス キーを使用した認証 配布パックのライセンス キーを使用した認証 指定ユーザー アカウントを使用した認証    使用するライセンスの選択 ArcGIS Maps SDK for Flutter には Lite、Basic、Standard の 3 つのライセンス レベルと Analysis エクステンションがあります。開発したアプリケーションが使用する機能に応じて、適切なライセンス レベルを選択してください。</description>
    </item>
    
    <item>
      <title>アプリケーション配布ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/distribution-ios-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/distribution-ios-200.x/</guid>
      <description>ArcGIS Maps SDK for Swift (バージョン 200.x) を使用して開発したアプリケーションを配布する場合に必要なライセンス認証の手順を説明します。
API キーの設定 ArcGIS Location Platform のロケーション サービスを使用する場合は、アプリで API キーを設定する必要があります。API キーの詳細は API キーの取得を、API キーの設定方法はアプリの作成の API キーを設定するをご覧ください。
ライセンス認証のステップ 開発したアプリケーションのライセンス認証のステップは以下の通りです。
  使用するライセンスの選択
  ライセンスの認証方法
 Lite ライセンスの認証方法 Basic ライセンスの認証方法 Standard ライセンスの認証方法 Analysis Extension ライセンスの認証方法 Advanced Editing Extension ライセンスの認証方法    ライセンスの認証
 Lite ライセンス キーを使用した認証 配布パックのライセンス キーを使用した認証 指定ユーザー アカウントを使用した認証    使用するライセンスの選択 ArcGIS Maps SDK for Swift には Lite、Basic、Standard の 3 つのライセンス レベルと Analysis エクステンションがあります。開発したアプリケーションが使用する機能に応じて、適切なライセンス レベルを選択してください。</description>
    </item>
    
    <item>
      <title>カスタム ウィジェット開発ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/development-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/development-guide/</guid>
      <description>はじめに このガイドについて このガイドは ArcGIS Web AppBuilder (Developer Edition) （以下、Web AppBuilder）で使用するカスタム ウィジェットを作成する方法を説明します。
Web AppBuilder のインストール方法に関しては、ArcGIS Web AppBuilder (Developer Edition) インストールガイドをご参照ください。
また Esri Japan GitHub では、Web AppBuilder のカスタム ウィジェット/テーマが共有されています。このガイドで作成するウィジェットの完成版も公開されています。
既成ウィジェットのソースコードの確認 Web AppBuilder で使われる全てのウィジェットは &amp;lt;Web AppBuilder のインストール ディレクトリ&amp;gt;\client\stemapp\widgets に格納されていて、ソースコードを確認できます。開発したカスタム ウィジェットも同様にこのディレクトリに配置します。
上記ディレクトリにある samplewidgets フォルダーには簡易機能のサンプル ウィジェットが用意されています（本ガイドではウィジェット作成の雛形となるコードが記述されたテンプレートである CustomWidgetTemplate を使用します）。
ウィジェットのフォルダー構成 カスタム ウィジェットを作成する際に使用するファイルは以下です。全ファイルが必須ではなく、ウィジェットの UI を設ける、ウィジェットをローカライズする、設定画面を設ける等の目的に応じてファイルを準備します。
カスタム ウィジェットの開発 1. ウィジェット ボタンを配置する Web AppBuilder のウィジェットは2 種類に分けられます。1 つは「描画」ウィジェットのようなパネルを表示して使用するウィジェットです（Web AppBuilder では In-Panel ウィジェットと呼びます）。もう 1 つは、「現在位置」ウィジェットのように画面上にボタンのみを配置するパネルを表示しないウィジェットです（Off-Panel ウィジェットと呼びます）。
本ガイドでは簡単なバッファー検索を行う In-Panel ウィジェットを開発していきます。ウィジェットを追加するには &amp;lt;Web AppBuilder のインストール ディレクトリ&amp;gt;\client\stemapp\widgets にウィジェットのフォルダーを配置します。</description>
    </item>
    
    <item>
      <title>コア コンセプト</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/core-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/core-concepts/</guid>
      <description>出典：Calcite Design System - core concepts
Calcite コンポーネントは、最小限のコードで Web アプリケーションを構築するための、再利用可能な Web コンポーネントのライブラリーです。Calcite コンポーネントを使用すると、ブランドに沿った、軽量でアクセスしやすい Web アプリケーションを素早く構築できます。
Web コンポーネントはブラウザーのネイティブ規格であり、Calcite コンポーネントで開発するために必要な技術的概念の多くは、このライブラリー特有のものではありません。このページでは、効果的なに必要な、主要な Web コンセプトを紹介します。さらに詳しい情報について、このページで紹介されるすべての概念は、MDN Web Docs やその他の Web 標準ドキュメントで確認できます。
カスタム要素 カスタム要素は、Web コンポーネント標準の一部であり、HTML と任意の JavaScript ライブラリーや Web フレームワークを使用して、モダンなブラウザーで動作します。カスタム要素は機能をカプセル化するため、他のコードとの競合を防ぐことができます。
Calcite Components はカスタム要素であり、ネイティブの HTML 要素と同様に使用することができます。例えば以下のように記述します。
&amp;lt;calcite-action-bar layout=&amp;#34;horizontal&amp;#34;&amp;gt;&amp;lt;/calcite-action-bar&amp;gt; スロット スロットは、スロット名を参照することで独自のコンテンツを追加できるプレースホルダー要素です。スロットは Web コンポーネントの一般的な概念であり、すでに使用している可能性があります。例えば、次の HTML を見てみましょう。
&amp;lt;select&amp;gt; &amp;lt;option value=&amp;#34;platypus&amp;#34;&amp;gt;Platypus&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;sloth&amp;#34;&amp;gt;Sloth&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;armadillo&amp;#34;&amp;gt;Nine-banded armadillo&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; Web コンポーネントの用語では、option 要素は select のデフォルト スロットに配置されます。さらに、「Platypus」、「Sloth」、「Nine-banded armadillo」のテキストは、それぞれの option 要素のデフォルト スロットに配置されます。
Calcite コンポーネントの多くもデフォルト スロットを利用しています。例えば、以下の calcite-action-bar では、calcite-action 要素がデフォルト スロットに追加されています。</description>
    </item>
    
    <item>
      <title>データ可視化の手順</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/data-visualization-procedure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/data-visualization-procedure/</guid>
      <description>ArcGIS Online 上のデータを可視化するための方法  マップを作成したい シンボルを変更したい ラベルを変更したい  マップを作成したい マップ ビューアー → [追加] → [保存]
緯度経度の情報を持ったCSV ファイルなどを、レイヤーとしてマップに追加し、様々なレイヤーを組み合わせてマップを作成することができます。マップの保存には、コンテンツを作成する権限が必要です（権限を持っていない場合でもマップは作成できますが、保存することはできません）。
  マップ ビューアーを開きます。マップ ビューアーを開いた時点でベースとなる背景地図(ベースマップ)は自動的に表示されます。
  [追加] をクリックします。
  [レイヤーの検索]、[Living Atlas レイヤーの参照]、[Web からレイヤーを追加]、[ファイルからレイヤーを追加]、[マップ メモの追加] いずれかのレイヤーの追加方法を選択します。
  それぞれのレイヤー追加方法は、以下の通りです。
レイヤーの検索   [検索] ボックスにキーワードを入力し、[検索] をクリックします。 [検索先] ドロップダウン リストでは、検索する場所を限定することができ、また、[マップ エリア内] のチェックボックスをオンにすると、マップ ビューアーの表示範囲にあるレイヤーを検索することができます。
  検索結果は下部のボックス内に表示され、レイヤー名の右にある [追加] をクリックするか❶、レイヤー名をクリックしたのちに❷、[マップに追加] ❸をクリックします。
  [レイヤーの追加を完了] をクリックし、レイヤーの追加を終了します。
  Living Atlas レイヤーの参照 米国 Esri 社やほかのユーザーが提供する高品質マップ レイヤーをマップに追加します。レイヤーの詳細は、アイテム説明で確認できます。レイヤーによっては、組織向けアカウントでのサイン インが必要であったり、クレジットを消費するものがあります。
Web からレイヤーの追加 URL を指定して、ArcGIS Server Web サービス、OGC WMS Web サービス、OGC WMTS Web サービス、Web サーバー上にあるタイル レイヤー、KML ファイル、GeoRSS ファイル、および CSV ファイルのレイヤーを追加することができます。</description>
    </item>
    
    <item>
      <title>フィーチャサービスの作成</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/services/create-feature-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/services/create-feature-service/</guid>
      <description>配信可能な地図サービス ArcGIS Location Platform では、お手持ちの地図データや、住所・緯度経度を含む CSV などのテキスト データをもとに地図 (GIS) サービスを配信することが可能です。ArcGIS の地図サービスはさまざまな機能ごとに種類が分かれています。配信可能な基本的な地図サービスは以下の 2 種類です。
  フィーチャ サービス (レイヤー)
  緯度経度および属性情報をフィーチャ (文字列) として配信 (クライアントでベクター データのグラフィックとして描画されます)
  クライアント側でクエリを実行してデータを取得したり、編集したりする場合に利用
機能 : 表示 (地図と属性) / 検索 / 作成 / 更新 / 削除
    タイル サービス (レイヤー)
 あらかじめ作成しておいたタイル状に分割された地図を配信 描画速度が速く、背景地図などの広範囲のデータを利用したい場合に最適 機能 : 表示 (地図のみ)    Esri は無償で利用できるタイル サービスとして、全世界の背景地図サービス (道路地図、地形図、衛星画像 など) を配信しています。 なお、自分でタイル サービスを生成する場合は、10,000 タイルにつき 1 クレジットを消費して生成できます。 生成したタイル サービスを公開する方法は ArcGIS Online ヘルプのホスト タイル レイヤーの公開をご覧ください。</description>
    </item>
    
    <item>
      <title>ページ（Page）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/page/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/page/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - page
ページ（Page） エクスペリエンスの中のページは、物理的な HTML Web ページでなく、概念的なページですが、実際の HTML Web ページのように振る舞います。これは div HTML タグを使って実装されます。エクスペリエンスは少なくとも 1 つのページを持たなければならず、複数のページを持つこともできます。Experience Builder のページ レイアウトにはフル スクリーンのアプリ ページと直線的なスクロール ページの2種類があり、前者はアプリのように見え、後者はウェブ ページのように見えます。
ページの内容（ウィジェット/セクション/スクリーン）は、固定レイアウトやフロー レイアウトなどのレイアウト ルールで整理されています。異なる画面サイズでもページが反応するようにするために、Experience Builder はサイズ モードによるレイアウトの設定をサポートしています。これらは Large, Medium, Small で定義されています。各レイアウトの設定はエクスペリエンスの適応であり、アプリケーションをよりカスタマイズし、画面サイズをより有効に利用できるようにすることで、より大きな柔軟性を提供します。このデザインの良い例としては、City Explorer のテンプレートがあります。アプリケーションを大・中画面で見た場合、地図は表示され、構成に含まれていますが、モバイル デバイスで見た場合、マップ ウィジェットは最初のページから削除され、ユーザーがリスト ウィジェットで機能を選択した後、2番目のページにのみ表示されるようになります。
app config では、ページは pages で定義され、ページ構造は pageStructure で定義されます。</description>
    </item>
    
    <item>
      <title>新規プロジェクトにプラグインを追加</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/unity/add-the-plugin-to-a-new-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/unity/add-the-plugin-to-a-new-project/</guid>
      <description>出典：ArcGIS Maps SDK for Unity - Guide - Add the plugin to a new project
ArcGIS Maps SDK for Unity は、ソース コードとサンプル アセットを含む Unity プラグインです。このページを始める前に、必ずプラグインをダウンロードしてください。
新規プロジェクトの作成   新しいプロジェクトを作成するには、Unity Hub を開いて [プロジェクト (Projects)] タブを選択し、[新しいプロジェクト (New project)] ボタンをクリックします。
  ポップアップ ウィンドウで、以下を定義します。
 エディター バージョン：ArcGIS Maps SDK for Unity は Unity 2022.3.x LTS および Unity 6 をサポートしています。複数の Unity エディター バージョンがインストールされている場合は、ポップアップ ウィンドウの上部でサポートされているエディター バージョンを選択してください。 テンプレート：プラグインは High Definition Render Pipeline (12.x) と Universal Render Pipeline (12.</description>
    </item>
    
    <item>
      <title>新規プロジェクトにプラグインを追加</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/unreal-engine/add-the-plugin-to-a-new-project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/unreal-engine/add-the-plugin-to-a-new-project/</guid>
      <description>出典：ArcGIS Maps SDK for Unreal Engine - Guide - Add the plugin to a new project
ArcGIS Maps SDK for Unreal Engine は、ソース コードとサンプル アセットを含む Unreal Engine プラグインです。このページを始める前に、必ずプラグインをダウンロードしてください。
新規プロジェクトの作成 Unreal Engine には、お客様の業種に合ったさまざまな開発テンプレート (Developer Template)が用意されています。 どのテンプレートを選べばよいかわからない場合は、ゲーム テンプレート (Games Template) とシミュレーション テンプレート (Simulation Template) をお勧めします。これらのテンプレートの詳細については、Unreal Engine テンプレート リファレンスを参照してください。
  Unreal Engine を起動するには、Epic Games ランチャー を開き、[ライブラリ (Library)] をクリックします。サポートされているバージョンを選択し、[起動 (Launch)] をクリックします。Unreal Engine を起動すると、[Unreal プロジェクトブラウザ (Project Browser)] が自動的に開きます。
  [最近利用したプロジェクト (Recent Project)] の下で、[開発テンプレート (Developer Template)] の[ゲーム テンプレート (Games Template)]を選択してください。</description>
    </item>
    
    <item>
      <title>開発の手順 (CDN)</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/get-started-cdn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/get-started-cdn/</guid>
      <description>出典 : ArcGIS Maps SDK for JavaScript - Get started with CDN
コード : Map コンポーネントを表示するチュートリアル、または マップ コンポーネントの導入-2D マップの作成 サンプルから始めましょう。
セットアップ ArcGIS Maps SDK for JavaScript をアプリに組み込む方法はいくつかあります。最も一般的な方法は、ArcGIS CDN を使用することです。ファイルは最適化されたクラウドキャッシュを介してダウンロードされるため、アプリケーションをローカルでビルドする必要がありません。また、SDK の新しいバージョンに更新するのも簡単で、その都度アプリケーションを再ビルドする必要がありません。
コンポーネント ArcGIS Maps SDK for JavaScript のコンポーネントは、Calcite Design System と SDK のコア API に依存しています。まず Calcite とコア API を読み込む必要があります。
Calcite を読み込むには、スタイルシート リンクとスクリプト タグを含めて Calcite コンポーネントをインポートします。
ArcGIS Maps SDK for JavaScript のバージョン 4.32 より前のバージョンでは、Calcite CSS リンク タグを含める必要がありました。 バージョン 4.32 では、Calcite CSS リンク タグは必要なくなりました。</description>
    </item>
    
    <item>
      <title>MapLibre GL JS</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-maplibre/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-maplibre/</guid>
      <description>マップを表示する このチュートリアルでは、MapLibre GL JS と ベースマップ レイヤー サービスを使用して、マップを表示する方法を紹介します。
ベースマップ レイヤー サービスのベクター タイル ベースマップ レイヤーを使用して、MapLibre GL JS にマップを表示できます。ベクター タイル ベースマップレイヤーは、ソース、レイヤー、フォントグリフ(Font Glyphs)、およびレイヤーをレンダリングするためのアイコンを含む MapLibre GL スタイルです。
このチュートリアルでは、ベースマップ レイヤー サービスの地形ベースマップ レイヤーを使用して、富士山周辺の地図を表示します。
マップとレイヤーの詳細については、Mapping APIs and services のガイドの Mapping にアクセスしてください。
前提条件 この機能を使うには、開発者アカウントが必要です。アカウントの作成手順については「開発者アカウントの作成」を参照してください。
手順 新しい Pen の作成 CodePen にアクセスして、マッピング アプリケーション用の新しい Pen を作成します。
HTML の作成 HTML ページを定義して、Web ブラウザの幅と高さにあわせたマップを作成します。
 CodePen &amp;gt; HTML で、HTML と CSS を追加して、map という id 属性を持つ div 要素のあるページを作成します。 map id は、マップを表示するために使用される id 属性です。CSS はブラウザの設定をリセットして、マップがブラウザの幅と高さ全体に表示されるようにします。  &amp;lt;!</description>
    </item>
    
    <item>
      <title>Web マップの作成</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/services/create-webmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/services/create-webmap/</guid>
      <description>Web マップとは Web マップとは背景地図や主題となる地図データを追加し、表示方法などを設定してクラウド上に JSON 形式で保存される Web 上の地図です。Web マップの作成には ArcGIS クラウド サービスが提供する地図作成ツール（マップ ビューアー）を使用します。クラウド上に保存された Web マップを使えば、地図上に何をどのように表示するかを一つ一つコーディングする必要がなく、非常にローコストで地図アプリを作成することができます。
Web マップに含まれる情報は以下の JSON 仕様で確認できます。
 Web マップ仕様 (Web Map JSON)  Web マップの作成 1. Web マップの作成とレイヤーの追加 マップ ビューアーで Web マップを作成していきましょう。
  マップ ビューアーを開きます。
  開発者アカウントでサインインします（サインインをしないと地図作成機能を利用できません）。
  ArcGIS Living Atlasで共有中のレイヤーを追加します。[追加] をクリック後、[マイコンテンツ]を [Living Atlas] に変更し [レイヤーの検索] を選択します。
  レイヤーの検索を行います。検索先を変えるなどしてもよいので、検索フォームにお好きなキーワードを入力して検索してみましょう。
  検索結果が表示されたら、追加したいレイヤーの[+]ボタンをクリックするとレイヤーが追加されます。
   今回は、東京都 避難所と南海トラフ巨大地震の被害想定（震度/最大クラス）のレイヤーを追加しています。  2. レイヤーの表示方法の設定   レイヤーの表示設定を変えてみましょう。 レイヤー リストから表現を変更したいレイヤーを選び、[&amp;hellip;] アイコンをクリックして、[プロパティの表示] をクリックします。</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/install-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/install-guide/</guid>
      <description>ArcGIS Experience Builder は、モダンな Web アプリ構築のための新しいビルダーで、コードを記述することなく Web アプリケーションを作成することができます。豊富なウィジェット セットから必要なツールを選択したり、独自のテンプレートをデザインしたり、2D コンテンツや 3D コンテンツを操作したりすることができます。Developer Edition (開発者向けエディション)は、これらの機能に加え、ウィジェットやテーマを独自に開発するなどのアプリをカスタマイズするためのフレームワークを提供します。また、作成したアプリケーションをダウンロードして、Web サーバーなどの独自のサーバーにホストすることが可能です。
ArcGIS Experience Builder (Developer Edition) で使用されている技術は、ArcGIS Maps SDK for JavaScript 4.x に加えて、React + Redux といったフレームワークや Bootstrap 4 などのコンポーネントライブラリ等を使用しています。開発に必要な情報は ArcGIS Experience Builder (Developer Edition) のコア コンセプト (Core concepts) を参照してください。
インストール ArcGIS Experience Builder (Developer Edition) は、ArcGIS Online および ArcGIS Enterprise 10.6 以降をサポートしています。 Experience Builder (Developer Edition) は server と client の 2 つのサービスを使用しています。
 server サービス  Experience Builder (Developer Edition) の本体を起動します。   client サービス  独自のウィジェットやテーマを開発するためには client サービスを使用する必要があります。通常、server サービスを起動することで、Experience Builder (Developer Edition) を動作させることはできますが、開発したウィジェットなどを配置したり、デバッグするには、client サービスを起動しておく必要があります。    両方のサービスを実行しておくことで、Experience Builder での更新を自動的に反映することができます。 ここでは、Experience Builder (Developer Edition) の server と client のインストール手順について説明します。また、インターネットに接続していない環境で Experience Builder をインストールする必要がある場合は、offlineでのインストール手順を参照してください。</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-install/</guid>
      <description>Python には、ArcGIS Pro で使用できるパッケージが豊富に用意されています。Python パッケージの使用を簡素化するために、ArcGIS Pro には conda と呼ばれるパッケージ管理システムが含まれています。 conda は、パッケージとその依存関係のインストールや更新の手間を省きます。 個のガイドでは ArcGIS Pro を使用したインストールの流れについてご紹介します。
STEP 1: Python API のインストール  ArcGIS Pro でインストール Python コマンド プロンプトでインストール  STEP 2: arcgis パッケージのアップグレード STEP 3: ArcGIS API for Python の実行  Jupyter Notebook の起動 Jupyter Notebook で地図表示  参考  オフライン時のインストール方法 特定の Python 環境のカーネルの追加  Python API のインストール ArcGIS Pro でインストール ArcGIS Pro では、2.5 以降のリリースから conda と arcgis パッケージが最初からインストールされています。 conda の機能は、パッケージ マネージャー を通じて ArcGIS Pro に統合されています。ArcGIS Pro 2.</description>
    </item>
    
    <item>
      <title>ウィンドウ（Window）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/window/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/window/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Window
ウィンドウ（Window） ウィンドウはページに似ていて、任意のウィジェットを追加することができ、コンテンツを表示するための2つの設定（固定とアンカー設定）があります。 固定ウィンドウはモーダルを作成し、メイン ウィンドウを無効にしますが、ユーザーがエクスペリエンスに戻る前にウィンドウと対話できるように表示を維持します。固定ウィンドウはスプラッシュ スクリーンとして使用したり、ページで開いたり、ウィジェットから開いたりすることができます。アンカー ウィンドウは、ボタンやテキスト ウィジェットなどのウィジェットからトリガーされます。
app config では、ウィンドウは dialogs で定義されます。</description>
    </item>
    
    <item>
      <title>デプロイ パターン</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/deploy-pattern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/deploy-pattern/</guid>
      <description>トピック  概要 Web アプリケーションをデプロイ ウィジェットをデプロイ テンプレートをデプロイ  概要 ArcGIS Web AppBuilder (Developer Edition) (以下 Developer Edition) では ArcGIS Web AppBuilder を拡張して、独自の Web アプリケーションやウィジェット、テンプレートを作成することが可能です。エンド ユーザーの利用形態や要件により最適なデプロイは異なりますが、このページでは以下の 3 つの主要なデプロイ パターンと、それぞれのデプロイ方法についてご紹介します。
 Web アプリケーションをデプロイ 全体像  Web アプリケーションを作成し、独自のサーバーでホストすることができます。特定の業務で継続的に利用されるアプリ等、ユーザーによる設定変更が不要な場合や、ユーザーに設定変更をさせたくない場合等に活用できます。   必要なコンポーネント  開発時  Node.js Developer Edition   運用時  ArcGIS Enterprise または ArcGIS Online Web サーバー (ArcGIS Enterprise の Web サーバーと併用も可)    手順概要 以下は Web アプリケーション作成から、デプロイ、実際の運用までの流れの概要です。
 カスタム ウィジェットを含む web アプリケーションを作成  Developer Edition を用いたウィジェットの開発や web アプリケーションの作成には Node.</description>
    </item>
    
    <item>
      <title>バージョン 10.2.x から 100.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/android/migration-android-100.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/android/migration-android-100.x/</guid>
      <description>ArcGIS Runtime SDK バージョン 100.x は新しいアーキテクチャを使用してゼロから開発された次世代の ArcGIS Runtime です。このバージョンアップに伴い API の再設計が行なわれています。このドキュメントでは、バージョン 100.x の変更点について説明します。
ArcGIS Runtime SDK for Android に関しては、ESRIジャパン 製品ページをご参照ください。
以下は、バージョン 100.x の主な変更点です。
 Gradle 参照プロジェクトの変更 マップ ビュー レイヤー クラス名の変更 フィーチャ レイヤーの表示 フィーチャの操作 個別属性表示 グラフィックス オーバーレイ ジオメトリとジオメトリ ビルダー ローダブル パターン 新しい同期パターン 既知の制限事項  Gradle 参照プロジェクトの変更 Android Studio のビルド ツールは Gradle を使用し、maven リポジトリとライブラリの参照を変更します。
repositories {jcenter()maven {url &#39;https://esri.jfrog.io/artifactory/arcgis&#39;}}dependencies {implementation &#39;com.esri.arcgisruntime:arcgis-android:100.10.0&#39;}ArcGIS Runtime SDK for Android がサポートする最新の動作環境は、ESRIジャパン 製品ページ（動作環境）をご参照ください。</description>
    </item>
    
    <item>
      <title>バージョン 10.2.x から 100.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/migration-ios-100.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/migration-ios-100.x/</guid>
      <description>ArcGIS Runtime SDK バージョン 100.x は新しいアーキテクチャを使用してゼロから開発された次世代の ArcGIS Runtime です。このバージョンアップに伴い API の再設計が行なわれています。このドキュメントでは、バージョン 100.x の変更点について説明します。
ArcGIS Runtime SDK for iOS に関しては、ESRIジャパン 製品ページをご参照ください。
以下は、バージョン 100.x の主な変更点です。
 マップとシーン ビュー レイヤー クラス名の変更 フィーチャ レイヤーの表示 フィーチャの操作 個別属性表示 グラフィックス オーバーレイ ジオメトリとジオメトリ ビルダー スケッチ エディター ローダブル パターン ブロックを使用した非同期プログラミング 既知の制限事項  マップとシーン 100.x では、AGSMap オブジェクト（2D表示用）と AGSScene オブジェクト（3D表示用）を API のコアとして、ArcGIS プラットフォームの Web GIS 機能を迅速に利用できるようになりました。
AGSMap オブジェクトと AGSScene オブジェクトは 、それらを表示する View と分離されています。AGSMap オブジェクトと AGSScene オブジェクトには 、操作レイヤー、ベースマップ、ブックマーク等の ArcGIS 固有のデータを設定でき、アプリケーションで利用することができます。
ビュー AGSMapView（2D表示用）と AGSSceneView（3D表示用）は、UI コンポーネントです。AGSMapView クラスの map プロパティに、AGSMap オブジェクトを、AGSMapSceneView クラスの scene プロパティには AGSScene オブジェクトを設定します。</description>
    </item>
    
    <item>
      <title>バージョン 100.x から 200.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/android/migration-android-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/android/migration-android-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for Kotlin - Guide - Migrate from 100.x to 200.x
ArcGIS Runtime SDK バージョン 100.15 は、不具合修正とマイナー アップデートのみに焦点を当てた長期サポート リリースです。ArcGIS Maps SDKs for Native Apps バージョン 200.x は、100.15 の実績あるアーキテクチャをベースに、最新の開発者フレームワークのイノベーションを活用するように設計されています。このトピックでは、変更された API の領域について概説し、200.x アプリ用に 100.x コードをリファクタリングするための手順を説明します。
200.0 リリースでは、Android 向けの新しい Kotlin ベースの API「ArcGIS Maps SDK for Kotlin」が導入されました。
このリリースは、ArcGIS Runtime SDK for Android を Kotlin ファーストの SDK として完全に再構築したもので、コルーチン、フロー、null 安全などの機能をすぐにサポートすることができます。Java ベースの ArcGIS Runtime SDK for Android は、長期サポート（LTS）となり、不具合修正は継続されますが、それ以上の機能アップデートはありません。
新機能を利用するには、Java ベースの ArcGIS Runtime SDK for Android を置き換える ArcGIS Maps SDK for Kotlin に移行してください。詳細については、ブログ「ArcGIS Runtime SDK の今後のバージョンアップの計画についてのお知らせ」をご確認ください。</description>
    </item>
    
    <item>
      <title>バージョン 100.x から 200.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/migration-dotnet-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/migration-dotnet-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for .NET - Guide - Migrate from 100.x to 200.x
ArcGIS Runtime SDK バージョン 100.15 は、バグ修正とマイナー アップデートのみに特化した長期サポート リリースです。ArcGIS Maps SDKs for Native Apps バージョン 200.x は、100.15 の実績あるアーキテクチャをベースに、最新の開発者向けフレームワークの技術を活用するよう設計されています。このトピックでは、変更された API の領域の概要と、200.x アプリ用に 100.x コードをリファクタリングするためのガイダンスを提供します。
基本的な移行手順 ArcGIS Runtime SDK for .NET バージョン 100.0 から 100.15 で構築した既存のアプリを ArcGIS Maps SDK for .NET バージョン 200.0 に移行するには、以下の一般的な手順に従います。
 以下の システム要件の変更 のセクションを確認し、推奨される変更または更新を行います。 アプリケーションのソース コードを開きます。 すべての Esri.ArcGISRuntime.* NuGet リファレンスをバージョン 200.0 に更新します。 API の破壊的変更に対処します。v100.x で非推奨とマークされた API は 200.</description>
    </item>
    
    <item>
      <title>バージョン 100.x から 200.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/migration-ios-200.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/ios/migration-ios-200.x/</guid>
      <description>出典：ArcGIS Maps SDK for Swift - Guide - Migrate from 100.x to 200.x
イントロダクション ArcGIS Maps SDK for Swift v200.x は、Swift 開発者向けに設計された次世代マッピング API を提供します。これは、ArcGIS Runtime SDK for iOS v100.x の後継であり、同じ基盤、アーキテクチャー、および機能を継承しています。API の概念の多くは変更されていませんが、SwiftUI、構造化された同時並行処理、値型、Measurement、デフォルト パラメーターなどの Swift の規則、フレームワーク、および機能に合わせて記述されています。
既存のアプリを移行するには、大幅な変更が必要です。具体的には、SwiftUI を使用してユーザー インターフェイスを再構築し、async/await を使用して非同期コードを実装する必要があります。 これらのテクノロジーをしっかりと理解することは、移行を容易にし、強固な基盤を提供するのに役立ちます。
API 名の変更 型名変更 型 (クラス、プロトコル、構造体、および列挙型) は ArcGIS モジュールにカプセル化され、名前に AGS プレフィックスが含まれなくなりました。その結果として生じる名前の変更の例を次に示します。
   v100.x v200.x     AGSMap Map   AGSMapView MapView   AGSLoadable Loadable   AGSViewpoint Viewpoint   AGSPoint Point   AGSFeatureLayer FeatureLayer   AGSArcGISFeatureTable ArcGISFeatureTable    ArcGIS Maps SDK への製品名変更の一環として、Runtime という単語がタイプ名から削除されました。</description>
    </item>
    
    <item>
      <title>バージョン 3.x から 4.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/migrating-from-3.x-to-4.0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/migrating-from-3.x-to-4.0/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Migrating from 3.x to 4.28
バージョン 4.x では ArcGIS Maps SDK for JavaScript の構成要素が大きく見直され、機能拡張が行われています。バージョン 3.x で開発したアプリケーションをアップデートすることも可能ですが、アプリケーションを書き換えることを検討してください。
本トピックでは 3.x の API で作成した既存のアプリケーションを 4.x に移行するために必要な情報を解説します。API で更新された仕様はいくつかありますが、その中でも重要な項目について紹介します。
 プロパティのハンドリング View の利用 Map と Layer の仕様 モジュールとパッケージの更新 Web マップのサポート ローカライズ モジュール 廃止項目  バージョン 4.0 では、大幅な変更が行われました。これらの変更は、開発者がどのようなアプリケーションを作成する場合でも、より効率的かつ効果的に作業できるようにするために行われました。この変更は、コンストラクタ、プロパティ、イベントの処理方法に見られます。
プロパティ 4.0 より前のバージョンでは、getMethodName や setMethodName を呼び出すことで、一部のプロパティを get (読み込み）または set（書き込み）することができました。API では、すべてのプロパティを取得・設定するためのシンプルで一貫した方法がサポートされているため、これらのタイプのメソッドは不要になりました。
 例えば map.basemap = &amp;quot;oceans&amp;quot; のようにオブジェクトに直接プロパティを設定します。 例えば map.basemap.title. のようにオブジェクトから直接プロパティを取得します。  例えば、3.x ではフィーチャーレイヤーの definitionExpression 設定は、以下のようになります。</description>
    </item>
    
    <item>
      <title>ルートの検索</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/services/create-routing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/services/create-routing/</guid>
      <description>出典：Mapping and location services guide - Route and directions
ルーティングとは？ ルーティングとはシンプル ルーティングとも呼ばれ、人や車両を出発地点地から目的地点地までの最適経路を導き出す手段の一つです。ルーティングは、制限速度や車線の数、時間帯といった道路網における様々なデータ パラメータを考慮しています。その他にも道路状況や事故、障害物といったリアルタイム データを考慮したルーティングも可能となります。
ルーティングを利用して以下のアプリケーションを構築することができます。
・出発地点から目的地点までの最短経路を検索
・複数の目的地点への最短経路を検索
・多言語での経路案内を実現
ルーティングの仕組み 経路作成における典型的なワークフロー
  出発地点と経由地点および目的地点を明確にする
  経路における移動手段を明確にする
  サービスから経路や道案内を呼び出す際に、経路の特徴や道順を確認することが可能
  ルーティング サービスを用い、シンプルな経路や最適化された経路を作成することができます。
・シンプルな経路とは地点間の最短経路のことをいいます。
・最適化された経路とは、地点間の最も効率的な経路のことをいいます。
最適化された経路を作成するためには、findBestSequence パラメータを使用する必要があります。このパラメータを使用すると、地点間の最も効率的な経路を返すように順序が変更されます。
開発者アカウントをお持ちの場合、シンプルな経路の作成は位置情報サービスへのアクセスの無料枠に含まれています。最適化された経路の作成を利用するには、従量課金となります。
経路のナビゲーションの方法 経路が決定したら、現在の端末位置情報を使用して進行状況を把握することや、経路を縦断する際にナビゲーション指示(音声案内)を呼び出したい場合、ArcGIS Maps SDKs for Native Apps で実行するのが効果的です。
経路案内についてより詳しく知りたい方は、以下に記載のガイド「Navigate a route」をご参照ください。
・ArcGIS Maps SDK for Kotlin
・ArcGIS Maps SDK for Swift
・ArcGIS Maps SDK for .NET
・ArcGIS Maps SDK for Qt</description>
    </item>
    
    <item>
      <title>地図上に賢くデータを可視化するための 6 つの方法</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/6ways-to-improve-your-maps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/6ways-to-improve-your-maps/</guid>
      <description>ArcGIS のデータ ビジュアライゼーション ツール（マップ ビューアー）を使って地図データを賢く可視化するために おさえておくべき６つの方法を紹介します。
 色について考える パターンを発見する アウトラインを調整する 透過率を調整してパターンをハイライトする ２つの属性データをサイズと色で表現する もっとも大きい値を発見する  色について考える 主題となるデータに色を加える場合に考えるべき事項は以下の 3 つです。
 背景地図 ストーリー カラーランプ  地図を使ったデータ可視化ではほとんどの場合、__背景地図__の上に主題となるデータが重なります。 そのため、色は背景地図の配色に応じて見やすい適切な色を選択するべきです。 ただし、データ可視化においてはむしろ背景地図を使わないという選択肢も１つのテクニックになり得ます。
データ可視化には必ず伝えたい__ストーリー__があります。 そのストーリーを説明するような説得力のある色を選びましょう。
最後に__カラーランプ__ですが、数値データに対してその値の範囲をカラーランプ（色の変化）で表現します。 上記のストーリーとデータのもつ意味を照らし合わせて、どの色からどの色へ変化すべきなのか考えてみましょう。
パターンを発見する データ可視化の主題となるデータからパターンを導き出すことは重要です。 パターンを浮かび上がらせるためにはいくつかの方法があります。 たとえば、数値データに対しての表現として以下がまず前提となる２つの項目です。
 色を使うか？サイズを使うか？ クラスで分類するか？しないか？  たとえば、公園の面積で大中小のような３段階の規模でカテゴライズして可視化したい場合、 色よりもサイズで規模を表現したほうが意図を伝えやすいと思います。 そして、面積に比例してシンボルが変化するより、３段階でクラス分類すべきでしょう。
ArcGIS のビジュアライゼーション ツールにはヒストグラムを掛け合わせたスライダーを操作することによって、 動的に見栄えを確認しながら変化させることができます。 ストーリーとの関連から、基点となる数字に意味を持たせるのもよいと思いますが、 このスライダーを使ってあくまで地図上で可視化されたグラフィックの集合から、 あるパターンを浮かび上がらせるには便利なツールです。
変化前（左）と変化後（右）
アウトラインを調整する ポイントとポリゴンのシンボルはアウトライン（枠線）があります。 アウトラインはデータをそれぞれ視認するのには役立ちますが、 適切に調整をしないで使用すると視覚的には邪魔な要素となり、 地図上の主題データが伝えるストーリーを理解するための焦点を逸らしてしまいかねません。
色と透過率を用いて、強調しないようなアウトラインの表現に調整してみてください。 場合によっては、完全にアウトラインをなくしてしまうことも選択肢として考えられます。
調整前（左）と調整後（右）
透過率を調整してパターンをハイライトする パターンを発見/可視化するためのシンボル表現として色あるいはサイズを選択することを伝えましたが、 もう１つ値の変化を表現する方法として透過率を利用する方法があります。 パターンや基点となるような重要な値をハイライトする際に採用することをお薦めします。
透過率もスライダーで動的にレンジを調整することが可能です。
２つの属性データをサイズと色で表現する 従来、地図上で属性データを可視化する場合は単一の属性値に基づいて色やサイズで表現することが基本でした。 マップ ビューアーのビジュアライゼーション機能では、 ２つのデータを色とサイズでそれぞれ表現することで１つのシンボルに対して２つの意味を含めることが可能です。
たとえば、エリアごとの家賃相場を色、居住者の平均年収をサイズで表現することで、 家賃相場と居住者の収入の関連を単一の主題図で可視化することができます。
もっとも大きい値を発見する ビジュアライゼーション機能のなかでもっともユニークなものとして、 複数の属性値を比較してもっとも大きい値を占める属性を可視化する機能があります。</description>
    </item>
    
    <item>
      <title>開発の手順（npm）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/get-started-npm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/get-started-npm/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Get started with npm
@arcgis/map-components Vite および @arcgis/core Vite のサンプルを使用して始めることができます。
ArcGIS Maps SDK for JavaScript の @arcgis/map-components と @arcgis/core パッケージは、npm コマンドライン インターフェイスを使用してローカルにインストールできます。
始めるには、npm と Node.js の両方をインストールします。さらに、モジュールバンドラーとローカル Web サーバーを含むクライアントサイドのビルドツール（例：Vite.js）が、アプリケーションの開発とテストに必要です。
フレームワークやトランスパイラーの使用は任意であり、特定の要件に依存します。これらのツールの基本的な動作を理解しておくことが重要です。これらの概念の紹介については、以下の追加情報セクションを参照してください。
依存関係の管理 npm を使用する場合、package.json ファイルはアプリケーションの実行とビルドに必要なパッケージの初期セットを指定します。これらの npm パッケージがインストールされると、それぞれ固有の依存関係も指定されます。
ローカル ビルド ツールを使うのが初めての場合、package.json が依存関係、devDependencies、peerDependencies とどのように連動するかを理解することが重要です。
コンポーネント インストール Map コンポーネントを使用する場合、@arcgis/map-components パッケージをプロジェクトにインストールします。
npm の場合
npm install @arcgis/map-components yarn の場合
yarn add @arcgis/map-components @arcgis/core @esri/calcite-components レイアウトの作成 index.html ファイルに arcgis-map コンポーネントを追加し、main.js ファイルを参照します。各コンポーネントはカスタム要素であり、HTML タグを使用してアプリケーションに追加します。これらは &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; などの他の HTML 要素と同様に機能します。</description>
    </item>
    
    <item>
      <title>Jupyter Notebook を使ってみよう</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-jnsetup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-jnsetup/</guid>
      <description>ここでは、対話的に Python コードを実行し、出力を地図やグラフとして視覚化することができる Jupyter Notebook をご紹介します。Jupyter Notebook はオープンソ－スとして公開されている開発ツールのひとつで、ArcGIS API for Python (以下、Python API)はこのツール上でマップ等を表示することができます。 Jupyter Notebook の詳細については、Jupyter の公式マニュアルおよびクイックスタートガイドを参照してください。 また、サポートされているブラウザについてもご確認ください。Jupyter Notebook がサポートしていないブラウザ（Internet Explorer 等）ではマップ等が表示されないことがあります。
Jupyter Notebook の起動 conda と Python API がインストールされたら、Python コマンドプロンプト (ArcGIS Pro 経由でインストールした場合) または、Anaconda Prompt (Anaconda でインストールした場合) 等のターミナル アプリケーションに次のコマンドを入力して Jupyter Notebook を起動します。
jupyter notebookもし起動できなかった場合は次のコマンドをお試しください (参考: Jupyter fails to start)。
jupyter-notebook他、Windows OS を実行している場合はコマンド プロンプトまたは PowerShell ウィンドウでも代用できます。以下は、Windows のコマンドプロンプトからコマンドを実行した場合の画面のスクリーンショットです。
Windows のコマンドプロンプトからコマンドを実行した場合
Python API を root 以外の仮想環境を作成しインストールした場合、Jupyter Notebook を起動する前にその仮想環境をアクティベートする必要があります。root 以外の仮想環境を使用するメリットと仮想環境の作成および管理する方法の詳細については、公式のマニュアルページを参照してください。</description>
    </item>
    
    <item>
      <title>OpenLayers</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-openlayers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-openlayers/</guid>
      <description>マップを表示する このチュートリアルでは、OpenLayers と ベースマップ レイヤー サービス を使用して、マップを表示する方法を紹介します。
マップには、地理データのレイヤーが含まれています。マップには、ベースマップ レイヤーと、オプションで1つ以上のデータ レイヤーが含まれます。マップ ビューを使用し、場所とズームレベルを設定することで、マップの特定の領域を表示できます。
このチュートリアルでは、地形 ベースマップ レイヤーを使用して、 OpenLayers で富士山周辺の地図を表示します。
前提条件 このチュートリアルを実施するには、以下が必要です。
 開発者ダッシュボードにアクセスして API キーを作成するには、開発者アカウントが必要です。アカウントの作成手順については「開発者アカウントの作成」を参照してください。  ステップ 新しい Pen の作成 CodePen にアクセスして、マッピング アプリケーション用の新しい Pen を作成します。
HTML の作成 HTML ページを定義して、Web ブラウザの幅と高さにあわせたマップを作成します。
  CodePen ＞ HTML で、HTML と CSS を追加して、map という id 属性をもつ div 要素のあるページを作成します。
HTML を使って、マップを表示する Web ページを作成します。この時マップは map div 内に表示します。CSS を使って、マップを全幅・全高で表示されるようにします。
CodePenでは、&amp;lt;!DOCTYPE html&amp;gt;タグは必要ありません。他のエディタを使用している場合や、ローカルサーバでページを実行している場合は、必ずこのタグを HTML ページの先頭に追加してください。
  &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34; /&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;initial-scale=1, maximum-scale=1, user-scalable=no&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;OpenLayers Tutorials: Display a map&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; html, body, #map { padding: 0; margin: 0; height: 100%; width: 100%; font-family: Arial, Helvetica, sans-serif; font-size: 14px; color: #323232; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; ライブラリの読み込み OpenLayers と ol-mapbox-style の JavaScript と CSS ファイルを参照するために、&amp;lt;script&amp;gt;と&amp;lt;link&amp;gt;タグを追加します。</description>
    </item>
    
    <item>
      <title>Web アプリケーションのデプロイ</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/deploy-your-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/deploy-your-app/</guid>
      <description>トピック  アプリのダウンロード アプリのデプロイ グループ アクセスの設定 動作環境  ArcGIS Web AppBuilder (Developer Edition)（以下 Web AppBuilder）で作成したWeb アプリケーション (以下、アプリ) はダウンロードして、独自の Web サーバーにホストすることができます。もしアプリが未共有のアイテムを参照しているとき、ダウンロードしたアプリは ArcGIS Online または Portal for ArcGIS に登録する必要があります。 アプリをデプロイする場所にかかわらず、Web マップへのアクセスは必須です。
その他のデプロイ パターンについてはデプロイ パターンのページをご覧下さい。
アプリのダウンロード  Web AppBuilder を起動し、トップページを開いたら、アプリのダウンロードボタンをクリックします。 アプリケーションは ZIP ファイルでダウンロードされます。保存ダイアログが表示されたら、任意のフォルダーを指定し、[保存] をクリックします。これで、アプリケーションはローカル ドライブに保存されます。  アプリのデプロイ  ダウンロードしたアプリを解凍します。 解凍したアプリを Web サーバーへ配置します。 アプリのルート ディレクトリにある config.json ファイルを開き、以下の項目を編集します。 プロキシ
必要に応じて、使用するプロキシを proxy プロパティに追加します。プロキシの詳細は Use proxy をご参照ください。 アプリケーション ID
アプリケーション ID を appId プロパティへ設定します。アプリケーション ID を入手するには、アプリの追加、登録が必要です。詳細はアプリの追加およびアプリの登録をご参照ください。 OAuth と SAML を用いたプラットフォーム認証を活用するために、アプリケーション ID を使用することを推奨しています。  アプリをカスタマイズするには、以下のドキュメントを参照してください。</description>
    </item>
    
    <item>
      <title>インストールおよびセットアップ方法</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/install-and-setup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/install-and-setup/</guid>
      <description>インストールおよびセットアップ API へのアクセス ArcGIS Maps SDK for JavaScript をアプリに導入するには、複数のオプションがあります。AMD および ES モジュールの詳細については、Introduction to Tooling を参照してください。
ArcGIS CDN による AMD モジュール API にアクセスする最も一般的な方法は、ホスト型のバージョンを使用することです。Esri の CDN から API と CSS を参照して、アプリでの API の使用を開始してください。
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://js.arcgis.com/4.32/esri/themes/light/main.css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;https://js.arcgis.com/4.32/&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; NPM による ES モジュール JavaScript API は、npm（JavaScriptのパッケージマネージャー）を使っても利用できます。ローカルに API をインストールして、React や Angular などの JavaScript フレームワークや、webpack や rollup.js などのモジュールバンドラーで利用することができます。
インストール方法：
npm install @arcgis/core モジュールのインポート：
import Map from &amp;#34;@arcgis/core/Map.js&amp;#34;; CSS のインポート：
/* URL 文字列を使用した CSS */ @import &amp;#34;https://js.</description>
    </item>
    
    <item>
      <title>ウィジェット開発</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/custom-widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/custom-widget/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Widget development
ウィジェットは再利用可能な UI コンポーネントで、リッチな UX を提供する鍵となります。ArcGIS Maps SDK for JavaScript では、完全にカスタム化されたウィジェットを HTML 要素として View に含めることができます。これには、完全に新しい機能を持つ独自のビューを開発する必要があり、ウィジェットの ViewModel を拡張することとは異なります。
カスタムウィジェットを作成する場合、@arcgis/core ES モジュールをお好みのフロントエンド JavaScript フレームワークと共に使用することをお勧めします。React、Angular、Vue.js などのフレームワークは必須ではありませんが、最大の拡張性を提供します。SDK と疎結合で、フレームワークのよく知られた UI/UX パターンとコンポーネントのライフサイクルに準拠した複数のウィジェットを作成できます。独自のカスタムウィジェットの作成方法については、jsapi-custom-widget のサンプルを参照してください。
非推奨のお知らせ
バージョン 4.27 以降、完全なカスタム ウィジェットを構築するための基礎として、/esri/widgets/Widget をサブクラス化または拡張することは推奨されなくなりました。このパターンでは、SDK 内部への依存関係が作成され、文書化されていない変更が頻繁に発生する可能性があります。以下のガイド内容は、レガシー パターンに従ったものであり、既存のウィジェットを保守する場合にのみ使用してください。
このフレームワークはすべての Dijit を直接差し替えることを意図していません。例えば、dgrid の利用には Dijit が必要です。
トピック
 開発要件 ウィジェット ライフサイクル ウィジェットの実装 TypeScript デコレーター サンプルコード 関連リンク  開発要件 独自のカスタムウィジェットを作成する前に、自分のマシンでローカルにアプリケーションをビルドできるなど、最低限の要件を満たしていることを確認してください。このプロセスは、Web サーバー上でホストされ、ブラウザー上で実行される標準的な JavaScript アプリケーションを作成する場合に比べ、いくつかのステップが増えます。
TypeScript TypeScript を使うことをお勧めします。その利点のひとつは、デコレーターを使って機能を強化できることです。TypeScript のセットアップ ガイド ページでは、ArcGIS Maps SDK for JavaScript を使用して TypeScript 開発環境をセットアップするための基本的な手順を説明しています。また、TypeScriptとは何か、なぜ使われるのか、どのように使うのかについて詳しく説明したオンライン リソースもたくさんあります。これらの基本に慣れることで、ウィジェット開発プロセスがより簡単になります</description>
    </item>
    
    <item>
      <title>セクションとビュー（Section and view）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/section-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/section-view/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Section and view
セクションとビュー（Section and view） セクションは、複数のビューを追加できる領域を占めています。ビューはレイアウト コンテナで、ページやウィンドウに似ていますが、セクションの中にしか置くことができません。ビュー ナビゲーション ウィジェットは、セクション内のビューをナビゲートします。メニュー ウィジェットで複数のページを使用したり、ビュー ナビゲーション ウィジェットでセクションとビューを使用して同様の操作感を得ることができますが、両者には主な違いがあります。
 レンダリングについて - 複数のページを読み込む場合、最初は現在のページのコンテンツのみがレンダリングされます。セクション内の複数のビューを読み込む場合、ビュー内のすべてのコンテンツがレンダリングされますが、現在のビューのみが表示され、他はすべて非表示になります。 アニメーションについて - セクションでのみトランジションアニメーションを定義できます。  app config では、セクションは sections で定義され、ビューは views で定義されます。</description>
    </item>
    
    <item>
      <title>バージョン 10.2.x から 100.x への移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/migration-dotnet-100.x/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/dotnet/migration-dotnet-100.x/</guid>
      <description>ArcGIS Runtime SDK バージョン 100.x は新しいアーキテクチャを使用してゼロから開発された次世代の ArcGIS Runtime です。このバージョンアップに伴い API の再設計が行なわれています。このドキュメントでは、バージョン 100.x の変更点について説明します。
ArcGIS Runtime SDK for .NET に関しては、ESRIジャパン 製品ページをご参照ください。
以下は、バージョン 100.x の主な変更点です。
 マップとシーン ビュー レイヤー クラス名の変更 フィーチャ レイヤーの表示 フィーチャの操作 個別属性表示 グラフィックス オーバーレイ ジオメトリとジオメトリ ビルダー スケッチ エディター ローダブル パターン ローカルサーバー 既知の制限事項  マップとシーン 100.x では、Map オブジェクト（2D表示用）と Scene オブジェクト（3D表示用） を API のコアとして、ArcGIS プラットフォームの Web GIS 機能を迅速に利用できるようになりました。
Map オブジェクトと Scene オブジェクトは 、それらを表示する View と分離されています。Map オブジェクトと Scene オブジェクトには 、操作レイヤー、ベースマップ、ブックマーク等の ArcGIS 固有のデータを設定でき、アプリケーションで利用することができます。
ビュー MapView（2D表示用）と SceneView（3D表示用）は、UI コンポーネントです。MapView クラスの map プロパティに、Map オブジェクトを、MapSceneView クラスの scene プロパティには Scene オブジェクトを設定します。</description>
    </item>
    
    <item>
      <title>ベースマップ</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/services/basemaps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/services/basemaps/</guid>
      <description>出典：Mapping APIs and location services - Basemaps
ベースマップとは？ ベースマップはベースマップ レイヤーとも呼ばれ、マップとシーンの全体的なビジュアルを提供するレイヤーです。ベースマップには通常は大陸、湖沼、行政境界、道路、都市、地名などの地理的な特徴やラベルが含まれます。ベースマップの最も一般的なデータ ソースは、ベースマップ サービスとデータ サービス です。
ベースマップ レイヤーを使って以下のようなことができます。
 マップとシーンの両方で、世界中のさまざまな地理データの表示 ArcGIS streets、navigation、light gray canvas、OSM streets などのベースマップの表示 自身で指定した色、字体、フォントを使用したベースマップの表示 街路やナビゲーションのベクター タイル レイヤーの表示 衛星画像や陰影起伏図用のマップ タイル レイヤーの表示 独自のデータを独自の空間参照で表示  ベースマップの仕組み ベースマップ レイヤーは、マッピング アプリケーションの視覚的な基礎を提供します。ベースマップ レイヤーは、一般的にグローバルなデータを含み、マップやシーンに追加される最初のレイヤーです。マップを表示する場合、ベースマップ レイヤーが最初に描画され、次にデータ レイヤー、グラフィックス レイヤーの順に描画されます。
ベスト プラクティス：ほとんどの場合、アプリケーションはフィーチャの選択やポップアップの表示など、ベースマップ レイヤーとのやり取りを許可していません。ベースマップ レイヤー上にあるデータ レイヤーを使用してマップ内のフィーチャの表示や操作をすることができます。
データ ソースの種類 ベースマップの一般的なデータ ソースは、ベースマップ サービスとデータ サービスの 2 つです。
ベースマップ サービス ベースマップ サービスは、ベースマップ レイヤーのデータを提供する Esri がホストするサービスです。ベースマップ サービスには、ベースマップ スタイル サービスと静的ベースマップ タイル サービスが含まれます。
ベースマップ スタイル サービス ベースマップ スタイル サービスは、世界中のベースマップ スタイルとデータを提供するロケーション サービスです。各ベースマップ スタイルには、地理的なフィーチャとラベルの視覚的なプロパティに固有のセットがあります。このサービスには ArcGIS と OSM のスタイルが含まれます。デフォルトのベースマップ スタイルには、streets、navigation、light gray canvas、imagery などがあります。各スタイルのデータは、ArcGIS でホストされているベクター タイル レイヤーとマップ タイル レイヤーを通じて提供され、Web メルカトル空間参照に格納されます。このサービスでは、場所、ローカル言語、worldview を表示することもできます。</description>
    </item>
    
    <item>
      <title>マッピング アプリの作成</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/tutorials/create-a-mapping-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/tutorials/create-a-mapping-app/</guid>
      <description>出典：Calcite Design System - Create a mapping app
Calcite コンポーネントと ArcGIS Maps SDK for JavaScript のマップ コンポーネントを使用して、シンプルなマッピング アプリケーションの UI を作成する方法について学びます。
Calcite コンポーネントを使用して、マッピング アプリケーションでポジティブなユーザー エクスペリエンスを設計し、ユーザーとのインタラクションを促進します。このチュートリアルではユーザー インターフェースに焦点を当てており、ArcGIS Maps SDK for JavaScript の基本的な知識が必要です。ArcGIS Maps SDK for JavaScript に初めて触れる場合は、このアプリケーションで用いられるマッピング概念を解説したチュートリアルをご覧ください。
前提条件 ArcGIS 開発者アカウント このチュートリアルで使用するサービスにアクセスするには、無料の ArcGIS Location Platform アカウントまたは ArcGIS Online 組織のアカウントが必要です。
ステップ 新しいペンの作成  CodePen にアクセスして、マッピング アプリケーション用の新しいペンを作成してください。  HTML の追加 CodePen の HTML で、HTML と CSS を追加して、arcgis-mapを表示するページを作成します。CSS は、マップがブラウザー ウィンドウの全幅と全高に表示されるようにします。 &amp;lt;!DOCTYPE html&amp;gt; タグは CodePen では必要ありません。異なるエディターを使用している場合や、ページをローカル サーバーで実行している場合は、HTML ページの先頭にこのタグを追加してください。</description>
    </item>
    
    <item>
      <title>CesiumJS</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-cesium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-cesium/</guid>
      <description>シーンを表示する このチュートリアルでは、CesiumJS と ベースマップ レイヤー サービスを使用して、シーンを表示する方法を紹介します。
ArcGIS マップ タイル サービスを使用すると、CesiumJS で地図が表示できます。例えば ArcGIS:Imagery マップ タイル レイヤーには、世界の地形と組み合わせて使用できる、グローバルなカバレッジを持つ衛星画像が含まれています。
このチュートリアルでは、ArcGIS:Imagery と Cesium World Terrain を使用して、富士山周辺のシーンを表示します。
ベースマップ レイヤーの詳細については、Mapping and location services ガイドの Basemaps とベースマップを参照してください。
前提条件 この機能を使うには、開発者アカウントが必要です。アカウントの作成手順については「開発者アカウントの作成」を参照してください。
ステップ 新しい Pen の作成 CodePen にアクセスして、新しい Pen を作成します。
HTML の追加 HTML ページを定義して、Web ブラウザの幅と高さにあわせたマップを作成します。
 CodePen &amp;gt; HTML で、HTML と CSS を追加して、cesiumContainer という id 属性を持つ div 要素のあるページを作成します。 cesiumContainer は、マップを表示するために使用される id 属性です。CSS はブラウザの設定をリセットして、マップがブラウザの幅と高さ全体に表示されるようにします。  &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;ja&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;CesiumJS: Display a Scene&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; html, body, #cesiumContainer { margin: 0; padding: 0; width: 100%; height: 100%; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;cesiumContainer&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; スクリプト参照の追加  &amp;lt;head&amp;gt;タグで、CesiumJS CSS および JS ライブラリへの参照を追加します。  &amp;lt;!</description>
    </item>
    
    <item>
      <title>Jupyter Lab を使ってみよう</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-jnlabsetup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/python-api-jnlabsetup/</guid>
      <description>JupyterLab は、コード、データ、そして Jupyter Notebook のファイル形式（*.ipynb）を扱う最新の対話型開発環境（IDE）です。Jupyter Notebook 同様、オープンソースとして公開されています。
ArcGIS API for Python（以下、Python API ）のバージョン 1.5.0 以降で対応しています。バージョン 2.4.0 以降は Jupyter Lab 4.0 に対応しています。
JupyterLab で GIS データとグラフの操作
JupyterLab は、より柔軟で強力なユーザー体験を実現するために Jupyter Notebook の主要コンポーネント (ノートブック、ターミナル、テキスト エディター、ファイル ブラウザー、ipywidgets など) をベースに構築されています。JupyterLab の詳細は JupyterLab のドキュメントや GitHub をご参照ください。
JupyterLab をはじめる Python API を JupyterLab で使用するためには、いくつかインストールなどの設定が必要です。
インストール   バージョン 1.5.0 以上の Python API をインストールするか、既存の環境を 1.5.0 以上にアップデートする ターゲットの仮想環境がある場合は、アクティベート（activate）してから行います。Python API のインストールまたはアップデートの方法はインストールガイドをご覧ください。
  次の 2 つのコマンドを実行します
 jupyter labextension install @jupyter-widgets/jupyterlab-manager jupyter labextension install arcgis-map-ipywidget@バージョン番号    2 つ目のコマンドの最後にある「バージョン番号」部分は、使用する Python API のバージョンに合わせて変更してください (例：1.</description>
    </item>
    
    <item>
      <title>インストール ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/install-jsapi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/install-jsapi/</guid>
      <description>JavaScriptライブラリをインストールする前に利用規約をご覧ください。 ArcGIS Maps SDK for JavaScript へのアクセスには、CDN（Content Delivery Network）上のホスト バージョンを使用することをお勧めします。
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://js.arcgis.com/4.33/esri/themes/light/main.css&amp;#34; /&amp;gt; &amp;lt;script src=&amp;#34;https://js.arcgis.com/4.33/&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; ただし、API のコピーを自分の Web サーバー上でローカルにホストしたい場合もあります。 詳細については、&amp;ldquo;AMD モジュールをローカルでホストできますか？&amp;rdquo; をお読みください。 FAQ トピックをご覧ください。
ライブラリーのダウンロード ライブラリとヘルプ ドキュメントは ArcGIS Maps SDK for JavaScript リファレンスの Downloads ページからダウンロードできます。ダウンロードしたいバージョンの [API] ボタンをクリックするとダウンロードが開始します。
※ バージョンによってはインストール方法が本手順とは異なる場合があります。詳しくはダウンロード フォルダ内にあります install.html をご参照ください。
 [Documentation] ボタンをクリックすると https://developers.arcgis.com/javascript/ で公開されているヘルプ ドキュメントとサンプル一式をダウンロードできます。
 ArcGIS Maps SDK for JavaScript ライブラリーのインストール Windows オペレーティング システムに ArcGIS Maps SDK for JavaScript ライブラリーをインストールする手順と、Unix/Linux ベースのシステムに ArcGIS Maps SDK for JavaScript ライブラリをインストールする手順は、オペレーティング システムと Web サーバー インスタンスに固有の Web サーバー ソフトウェアを構成する必要があるという事実を除いて、概念的に同じです。</description>
    </item>
    
    <item>
      <title>ウィジェット開発のスタート</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/getting-started-widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/getting-started-widget/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Getting started with widget development
ArcGIS Experience Builder は、React と ArcGIS Maps SDK for JavaScript を使用して構築されています。これにより、特定のワークフローに合わせて、カスタム ウィジェットを作成することができます。独自のウィジェットを作成するには、以下の基本的な理解が必要となります。
 TypeScript は、JavaScript のスーパーセットです。TypeScript は、ウィジェットの開発に使用される言語です。 React は、ユーザーインターフェースを作成するための JavaScript ライブラリです。React は DOM を抽象化したもので、アプリケーションや UI を様々な状態で考え、それらの状態をレンダリングすることで、UI の一貫性を保つことを容易にしています。 JSX は JavaScript の拡張構文で、React を通じてウィジェットの UI のあるべき姿を記述することができます。 Jimu は、Experience Builder がウィジェットを作成する際に使用する JavaScript ライブラリです。  インストール Experience Builder は、インストール用の ZIP ファイルとして提供されています。詳細については、インストール ガイドを参照してください。
ウィジェット開発環境のセットアップ カスタム ウィジェットの開発には、使い慣れた IDE やテキスト エディタを使うことができます。Visual Studio Code は、デフォルトで TypeScript に対応しているため、良い選択肢です。</description>
    </item>
    
    <item>
      <title>セキュリティと認証の紹介</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/security/</guid>
      <description>出典：Security and authentication guide - Security and authentication
ArcGIS は、許可されたユーザーとアプリケーションのみがセキュリティで保護されたリソースにアクセスできる安全なシステムです。開発者は、認証を使用してポータル、データ サービス、ロケーション サービスなどのセキュリティで保護されたリソースにアクセスするアプリケーションを構築できます。ArcGIS は 3 種類の認証をサポートしています。ロケーション サービスを利用した公開アプリを構築するための API キー認証、組織用のプライベートなアプリを構築するためのユーザー認証、ArcGIS Enterprise リソースで動作するサーバー対応のアプリケーションを構築するためのアプリ認証です。実装する認証の種類は、アプリケーションの要件と、ユーザーに ArcGIS アカウントを使用してサイン インさせるかどうかによって異なります。
ガイドの内容 以下のガイドでは、次の種類の認証を使用して安全なリソースにアクセスする方法を説明します (英語)。 API キー認証 ユーザー認証 アプリ認証  認証の開始
OAuth 2.0 を使用して ArcGIS にサイン イン
ポータルで開発者認証情報を作成
開発者認証情報の権限を選択
ポータルで API キーの認証情報を管理
ポータルで OAuth 認証情報を管理
API キーの認証ワークフロー
ユーザー認証 OAuth 2.</description>
    </item>
    
    <item>
      <title>データ可視化の手順（3D）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/data-visualization-procedure-3d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/other/visualization/data-visualization-procedure-3d/</guid>
      <description>ArcGIS Online が提供するシーン ビューアーを使用して、3D マップにデータを可視化する方法を紹介します。
 [3D マップを作成したい](#3D マップを作成したい) シンボルを変更したい 高さを表現したい  3D マップを作成したい シーン ビューアー → [新しいシーン] → [レイヤーの追加] → [シーンの保存]
ArcGIS Online などに公開されている Web サービスを、レイヤーとしてマップに追加し、様々なレイヤーを組み合わせて 3D マップを作成することができます。3D マップの保存には、コンテンツを作成する権限が必要です（権限を持っていない場合でも 3D マップは作成できますが、保存することはできません）。
  シーン ビューアーを開きます。シーン ビューアーを開いた時点でベースとなる背景地図(ベースマップ)は自動的に表示されます。
  [レイヤーの追加] をクリックします。
  [レイヤーの検索]、[レイヤー URL の入力] いずれかのレイヤーの追加方法を選択します。
  それぞれのレイヤー追加方法は、以下の通りです。
レイヤーの検索   [レイヤーの検索] ボックスにキーワードを入力し、[検索] をクリックします。
  検索結果は下部のボックス内に表示され、[追加] をクリックします。
  [完了] をクリックし、レイヤーの追加を終了します。
  レイヤー URL の入力 URL を指定して、ArcGIS Server Web サービスのレイヤーを追加することができます。</description>
    </item>
    
    <item>
      <title>暗色 (dark) モード スイッチの構築</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/tutorials/build-a-dark-mode-switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/tutorials/build-a-dark-mode-switch/</guid>
      <description>出典：Calcite Design System - Build a dark mode switch
Calcite コンポーネントと ArcGIS Maps SDK for JavaScript の明色 (light) モードと暗色 (dark) モードを切り替えるコンポーネントの作成方法について学びます。
Calcite コンポーネントを使用して、Calcite コンポーネント、ArcGIS Maps SDK for JavaScript のコンポーネントおよびベースマップに対して暗色 (dark) モードを有効にするスイッチを設計します。このアプリケーションはマッピング アプリの作成チュートリアルで作成したアプリケーションを基にしています。
Calcite では CSS クラスを使用して明色 (light) モードと暗色 (dark) モードを切り替えることができます (calcite-mode-light (デフォルト) と calcite-mode-dark)。また、calcite-mode-auto クラスも用意されており、これはブラウザーの CSS の prefers-color-scheme メディア クエリーに従います。モード クラスを要素に設定すると、そのすべての子ノードにも適用されます。
モードやスタイリングに関する詳細は、Calcite Design System の colors and modes および ArcGIS Maps SDK for JavaScript の Styling ドキュメントを参照してください。
ArcGIS 開発者アカウント このチュートリアルで使用するサービスにアクセスするには、無料の ArcGIS Location Platform アカウントまたは ArcGIS Online 組織のアカウントが必要です。</description>
    </item>
    
    <item>
      <title>画面グループ（Screen groups）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/screen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/screen/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Screen groups
画面グループ（Screen groups） 画面グループは、複数の画面を持つレイアウト コンテナで、スクロールするページのコンテンツやウィジェットを整理するためのものです。各画面はメイン ステージを持ち、画面グループのテンプレートによってはスクロール パネルを持つこともできます。画面グループにスクロールすると、画面の高さ全体を占めます。画面グループにスクロール パネルがある場合、エンド ユーザーがパネル内のコンテンツをスクロールしても、メイン ステージはその場に留まり、最後のパネルがスクロールしたときにのみ切り替わります。画面グループにパネルがない場合は、メイン ステージは画面の高さいっぱいにスクロールするまで固定されます。
app config では、画面グループは screenGroups で定義され、画面は screens で定義されます。</description>
    </item>
    
    <item>
      <title>.NET</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-dotnet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-dotnet/</guid>
      <description>出典：ArcGIS Maps SDK for .NET - Tutorials - Display a map
マップを表示する このチュートリアルでは ArcGIS Maps SDK for .NET を使用して、マップとベースマップ レイヤーを表示する方法を紹介します。
マップには、地理データのレイヤーが含まれています。マップには、ベースマップ レイヤーと、オプションで 1 つ以上のデータ レイヤーを追加できます。マップ ビューを使用し、場所とズーム レベルを設定することで、マップの特定の領域を表示できます。
このチュートリアルでは、地形図ベクター タイル ベースマップ レイヤーを使用して、富士山付近を表示する地図を作成します。
このチュートリアルのトピックの背景情報については、Mapping API and location services guide の Maps (2D) と ベースマップ を参照してください。
前提条件 このチュートリアルを実施するには、以下が必要です。
 API キーにアクセスするための開発者アカウントもしくは ArcGIS Online アカウントが必要です。アカウントをお持ちでない場合は、サインアップ (無料)してください。アカウントの作成方法は「開発者アカウントの作成」をご覧ください。 開発環境がシステム要件を満たしていることを確認します。  必要に応じて、ArcGIS Maps SDK for .NET をインストールして、Visual Studio プロジェクト テンプレート (Windows のみ) とオフラインにコピーされた NuGet パッケージを利用することもできます。
認証の設定 このチュートリアルで使用するセキュアな ArcGIS ロケーション サービスにアクセスするには、ArcGIS Location Platform または ArcGIS Online アカウントを使用して、API キー認証またはユーザー認証を実装する必要があります。</description>
    </item>
    
    <item>
      <title>Web コンポーネントでマッピング アプリを構築</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/tutorials/construct-a-mapping-app-with-web-components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/calcite-design-system/tutorials/construct-a-mapping-app-with-web-components/</guid>
      <description>出典：Calcite Design System - Construct a mapping app with web components
Calcite コンポーネントと ArcGIS Maps SDK for JavaScript の Map コンポーネントを使用して、Web コンポーネントでマッピング アプリケーションの UI を構築する方法をご紹介します。
Calcite コンポーネントを使用して、マッピング アプリケーションのユーザー エクスペリエンスを向上させ、インタラクションを促進します。このチュートリアルでは、アプリの作成を効率化するためのユーザー インタフェースとマップ コンポーネントに焦点を当て、ArcGIS Maps SDK for JavaScript の予備知識は必要ありません。ArcGIS Maps SDK for JavaScript を初めてお使いになる場合は、このアプリケーションで使用されている同様のマッピングをコンセプトに扱った素晴らしいチュートリアルをご覧ください。
前提条件 ArcGIS 開発者アカウント このチュートリアルで使用するサービスにアクセスするには、無料の ArcGIS Location Platform アカウントまたは ArcGIS Online 組織のアカウントが必要です。
ステップ 新しいペンの作成  CodePen に移動し、マッピングアプリケーション用の新しいペンを作成します。  HTML の追加   CodePen &amp;gt; HTML で、地図を表示する arcgis-map コンポーネントを含むページを作成するための HTML と CSS を追加してください。</description>
    </item>
    
    <item>
      <title>ウィジェット manifest</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/widget-manifest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/widget-manifest/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Widget manifest
各 ArcGIS Experience Builder ウィジェットには、ウィジェットの属性とプロパティを記述した manifest.json ファイルがあります。ウィジェットの manifest には、name、type、version、exbVersion、および translatedLocales プロパティを含める必要があります。ウィジェットの manifest を作成する簡単な方法は、demo widget から manifest.json ファイルをコピーすることです。以下は manifest.json ファイルの例です。ウィジェット内で ArcGIS Maps SDK for JavaScript を使用するには、dependency プロパティに jimu-arcgis を設定します。
{ &amp;#34;name&amp;#34;: &amp;#34;count-features&amp;#34;, &amp;#34;label&amp;#34;: &amp;#34;Count Features&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;widget&amp;#34;, &amp;#34;version&amp;#34;: &amp;#34;1.15.0&amp;#34;, &amp;#34;exbVersion&amp;#34;: &amp;#34;1.15.0&amp;#34;, &amp;#34;author&amp;#34;: &amp;#34;Esri R&amp;amp;D Center Beijing&amp;#34;, &amp;#34;description&amp;#34;: &amp;#34;This is widget is designed to display the numeric attributes of features.&amp;#34;, &amp;#34;copyright&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;license&amp;#34;: &amp;#34;http://www.apache.org/licenses/LICENSE-2.0&amp;#34;, &amp;#34;publishMessages&amp;#34;: [ &amp;#34;EXTENT_CHANGE&amp;#34;, &amp;#34;DATA_RECORDS_SELECTION_CHANGE&amp;#34; ], &amp;#34;messageActions&amp;#34;: [], &amp;#34;defaultSize&amp;#34;: { &amp;#34;width&amp;#34;: 360, &amp;#34;height&amp;#34;: 80 }, &amp;#34;properties&amp;#34;: {}, &amp;#34;translatedLocales&amp;#34;: [ &amp;#34;en&amp;#34;, &amp;#34;es&amp;#34;, &amp;#34;zh-cn&amp;#34; ] } widget&amp;rsquo;s manifest で利用可能なプロパティの詳細を参照してください。</description>
    </item>
    
    <item>
      <title>コンポーネント</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/components/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/components/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Components
ArcGIS Maps SDK for JavaScript コンポーネントは、最小限のコードで Web アプリを構築するための事前構築された UI コンポーネントのコレクションです。
標準ベースの Web コンポーネントとして構築されており、JavaScript Maps SDK のコア API を再利用可能なカスタム HTML エレメント（例：&amp;lt;arcgis-map&amp;gt;&amp;lt;/arcgis-map&amp;gt;）に拡張します。また、JavaScript フレームワークに依存しないように設計されているため、バニラ JavaScript やほとんどのフレームワークおよびモジュール バンドラーで構築されたアプリケーションで使用できます。
マップ コンポーネント @arcgis/map-components パッケージには、マップ コンポーネント、シーン コンポーネント、および SDK の既存のウィジェットと同等の機能を持つ他のコンポーネントが含まれています。
以下は、item-id 属性を持つマップ コンポーネント &amp;lt;arcgis-map&amp;gt; の使い方を示すコード スニペットで、指定されたアイテム ID を使用して ArcGIS マップを Web ページに埋め込むことができます。
&amp;lt;arcgis-map item-id=&amp;#34;05e015c5f0314db9a487a9b46cb37eca&amp;#34;&amp;gt;&amp;lt;/arcgis-map&amp;gt; チャート コンポーネント（ベータ版） @arcgis/charts-components パッケージには、ArcGIS Maps SDK for JavaScript アプリケーションでチャートを作成するために使用されるチャート コンポーネントとチャート アクション バー コンポーネントが含まれています。このパッケージは 9 種類のチャート タイプをサポートしており、各チャート タイプは、共有チャート仕様に準拠した model オブジェクトを設定することでレンダリングできます。この model オブジェクトは、Web マップまたはフィーチャ レイヤーから読み込むか、チャート モデル メソッドを使用してプログラムで構成できます。</description>
    </item>
    
    <item>
      <title>スクリプト実行の自動化</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/automate-tasks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/automate-tasks/</guid>
      <description>ArcGIS API for Python や ArcPy は、タスク スケジューラなどと組み合わせることで、様々な GIS タスクの実行を自動化することが可能です。
ここでは、例として以下のようなディレクトリ構成で実行する Python スクリプトを作成したと想定し、そのスクリプトを Windows 及び Linux で 30 分ごとに無期限で定期実行する方法を紹介します。
py-script/
├ config.ini
└ task.py
task.py は実行する Python スクリプト、config.ini は task.py の実行に必要なパラメータを記載した設定ファイルとします。
Windows のタスク スケジューラを使用する場合 Windows ではタスク スケジューラを使用することでプログラムやスクリプトを決められた時間や一定の間隔で実行することができます。
タスク スケジューラは以下の手順で設定します。
 タスク スケジューラを開く  スタート メニューからタスク スケジューラを検索して開く     右側の [操作] ペインから [タスクの作成] をクリック  新規タスクを作成するウィザードが開きます     [全般] タブ内のパラメーターを設定する  名前：タスクの名前 説明：タスクの説明を記載 セキュリティ オプション：  タスク実行時に使う Windows のユーザーアカウントを指定 [ユーザーがログオンしているかどうかにかかわらず実行する] をクリック [最上位の特権で実行する] にチェックを入れる   [構成] は使用している Windows のバージョンに合わせる (今回は Windows 10)     [トリガー] タブ内のパラメーターを設定する  [新規] をクリックし、新しいトリガーを作成 [タスクの開始] は [スケジュールに従う] をドロップダウンから選択 任意の開始時間を指定 [繰り返し間隔] にチェックを入れ、30分間を指定 [継続時間] は [無期限] を指定     [操作] タブのパラメーターを設定する  [操作] のドロップダウンから [プログラムの開始] を選択 [プログラム/スクリプト] で実行する Python の エグゼキュータブル ファイルのパスを指定  上の画像では ArcGIS Pro の Python パッケージ マネージャー で作成した環境の Python を指定しています。 パスが不明な場合、実行したい環境で ArcGIS Pro を起動し、Python ウィンドウを表示させて以下のコードを実行することで確認することができます。  import sys sys.</description>
    </item>
    
    <item>
      <title>デプロイの紹介</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/deployment/</guid>
      <description>出典：ArcGIS Location Platform - Deployment
アプリケーションをデプロイするためのライセンスと配布の要件は、開発するアプリケーションのタイプと使用する API によって決まります。これには、Web、ネイティブ、およびサービスベースのアプリケーションが含まれます。このヘルプ トピックでは、ソリューションをデプロイする前に知っておく必要がある情報について説明します。
アプリケーションをデプロイする前に、必ず利用規約を確認してください。 使用条件に従わない特別な導入要件がある場合はお問い合わせください。
すべての ArcGIS Location Platform アカウントには、サブスクリプション プランが関連付けられています。各サブスクリプションには、無料枠のロケーション サービスが付属しており、従量課金は無効になっています。このアカウントを使用して、API キーまたは OAuth 2.0 のいずれかを使用してロケーション サービスにアクセスするアプリケーションを構築できますが、利用できるのは無料レベルの使用量でアクセスできるロケーション サービスのみです。すべてのロケーション サービスにアクセスするには、従量課金を有効にする必要があります。利用可能な機能の一覧については、以下の表をご確認ください。
アプリケーションが特定の課金サイクルで無料枠を超えて使用した場合、従量課金を有効にしない限り、サービスへのアクセスは無効になります。従量課金は、アカウントのサブスクリプションの課金設定で構成することができます。従量課金と課金について詳しくはこちらをご覧ください。
すべてのロケーション サービスのトランザクションは米ドルで課金されます。サービスの利用料については、価格をご確認ください。
アプリケーションを導入する前に、従量課金を有効にして、中断のないサービス アクセスを確保することをお勧めします。
    無料枠 従量課金     ベースマップ 〇 〇   プレイス 〇 〇   住所検索 (データ保存しない) 〇 〇   住所検索 (データ保存する) × 〇   ルート検索 〇 〇   ルート検索（経由地の最適化） × 〇   到達圏 〇 〇   配車ルート解析 × 〇   最寄りの検索 × 〇   ラスト マイル デリバリー × 〇   ロケーション-アロケーション × 〇   移動コスト マトリックス × 〇   インフォグラフィックス × 〇   レポート作成 × 〇   標高サービス 〇 〇   空間解析 × 〇   タイル、ファイル、アタッチメントの保存 (250 MB) 〇 〇   フィーチャの保存 (250 MB) 〇 〇   フィーチャのクエリ (転送量、125 MB) 〇 〇   フィーチャの編集 (転送量、125 MB) 〇 〇    〇：対応　△：一部対応　×：未対応</description>
    </item>
    
    <item>
      <title>レイアウト（Layout）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/layout/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Layout
レイアウト（Layout） レイアウトは、レイアウト コンテナにコンテンツを配置する方法を定義します。コンテンツには、ウィジェット、セクション、または画面グループが含まれ、レイアウト コンテナには、ページ、ビュー、またはダイアログなどがあります。ArcGIS Experience Builder には、いくつかのレイアウト規則があります。たとえば、新しいページを作成するときに、Fixed レイアウトまたは Flow レイアウトを選択したり、Layout ウィジェットを使用して異なるレイアウトを作成したりすることができます。
アプリ コンフィグでは、レイアウトは layouts プロパティで定義され、レイアウト コンテナは layout id でレイアウトを参照します。レイアウト コンテナには、異なるサイズ モードでのレイアウトを定義する layouts オブジェクト プロパティがあります。Experience Builder では、Large、Medium、Small の各サイズ モードをサポートしています。レイアウトが定義されていないサイズ モードでは、アプリの設定で定義された mainSizeMode レイアウトが使用されます。
フレームワークのレイアウト コンテナの他に、ウィジェットもレイアウト コンテナになることができます。ウィジェットがレイアウト コンテナになると，ユーザーは他のウィジェットをドラッグ アンド ドロップすることができます。例えば、Map や Card はレイアウト コンテナ ウィジェットです。レイアウト コンテナ ウィジェットは、manifest.json で layouts プロパティを宣言し、LayoutEntry コンポーネントを使用する必要があります。パフォーマンス上の理由から、以下のロジックを使用する必要があります。
import {LayoutEntry} from &amp;#39;jimu-layouts/layout-runtime&amp;#39; let LayoutEntryComponent if (window.jimuConfig.isInBuilder) { LayoutEntryComponent = this.props.builderSupportModules.LayoutEntry } else { LayoutEntryComponent = LayoutEntry } </description>
    </item>
    
    <item>
      <title>Android</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-android/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-android/</guid>
      <description>出典：ArcGIS Maps SDK for Kotlin - Tutorials - Display a map
マップを表示する このチュートリアルでは ArcGIS Maps SDK for Kotlin を使用して、マップとベースマップ レイヤーを表示する方法を紹介します。
マップには、地理データのレイヤーが含まれています。マップには、ベースマップ レイヤーと、オプションで 1 つ以上のデータ レイヤーを追加できます。マップ ビューを使用し、場所とズーム レベルを設定することで、マップの特定の領域を表示できます。
このチュートリアルでは、地形図ベースマップ レイヤーを使用して、富士山付近を表示する地図を作成します。
このチュートリアルのトピックの背景情報については、Mapping API and location services guide の Maps (2D) と ベースマップ を参照してください。
このチュートリアルの*ダウンロード ソリューション*で利用可能なコードは、*Android Studio Ladybug | 2024.2.1 Patch* で作成されています。しかし、以下のステップで説明するコードは、それ以降のバージョンの Android Studio を含め、Kotlin をサポートする最新の Android IDE であれば動作するはずです。 --前提条件 このチュートリアルを実施するには、以下が必要です。
 API キーにアクセスするための ArcGIS 開発者アカウント。アカウントをお持ちでない場合は、サインアップ（無料）してください。アカウントの作成方法は「開発者アカウントの作成」をご覧ください。 開発環境がシステム要件を満たしていることを確認します。 Kotlin で Android 開発をするための IDE。  このチュートリアルのダウンロード ソリューションで利用可能なコードは、Android Studio Ladybug | 2024.</description>
    </item>
    
    <item>
      <title>matplotlib での日本語利用について</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/matplotlib-japanese/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/matplotlib-japanese/</guid>
      <description>ArcGIS API for Python では様々な オープンソース ライブラリを活用していますが、グラフを描画する際は主に matplotlib が使用されています。
matplotlib をデフォルトのまま使用すると日本語のテキストは文字化けしてしまいますが、フォント設定を変更することで表示させることが可能です。
対応環境 ここでは、次の環境を用いた場合の設定方法を説明します。
 ArcGIS Pro 2.5 ArcGIS API for Python 1.7.0 matplotlib 3.1.1  日本語フォントの多くは ttc ファイルで提供されていますが、以前の matplotlib は ttc ファイルに対応していませんでした。matplotlib 3.1.0 から ttc ファイルに対応するようになったため、フォントを追加でインストールすることなく日本語を表示させることができるようになっています。それ以前のバージョンをご利用されている場合は以下をご検討ください。
 ArcGIS Pro のアップグレード  ArcGIS Pro 2.5 では、デフォルトで作成されている arcgispro-py3 という名前の環境に、ArcGIS API for Python 1.7.0 及び matplotlib 3.1.1 がインストールされています。   ArcGIS API for Python をアップグレード  Anaconda を利用して環境構築している場合、ArcGIS API for Python を最新バージョンにアップグレードすることで、依存パッケージである matplotlib も併せてアップグレードされます。    matplotlib での日本語フォントの設定方法 設定方法は主に以下の 2 通りがあります。</description>
    </item>
    
    <item>
      <title>ウィジェットの実装</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/extend-base-widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/extend-base-widget/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Widget implementation
Experience Builder ウィジェットは、次のファイルで構成されています。
 src: ウィジェットのソースコード  runtime: フォルダー  widget.tsx: メインのファイル assets: widget.tsx で使用される assets フォルダー translations: ウィジェットで使われる strings フォルダー   setting: フォルダー  setting.tsx: ウィジェットで使用する設定ファイル assets: 設定で使用する assets フォルダー translations: 設定で使用する strings フォルダー     dist: コンパイル済みのウィジェットのソースコードを配置。ウィジェットのソースコードのフォルダーと同じ構成 icon.svg: ウィジェットパネルのウィジェットのアイコン config.json: ウィジェットのデフォルト設定 manifest.json: プロパティのリストは jimu-core/WidgetManifest で設定した内容を表示  Client サーバー Experience Builder (開発者向けエディション) で必要なモジュールをインストールしたら、/client ディレクトリで npm start を実行して webpack サーバーを起動します。webpack サーバーを起動した状態にすることでソースコードの編集におけるファイル変更を監視し、自動的にコンパイルを行います。通常は、ソースコードを編集する際に webpack サーバーを再起動する必要はありませんが、以下の場合では、サーバーを再起動する必要があります。</description>
    </item>
    
    <item>
      <title>カスタム フォント</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/custom-font/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/custom-font/</guid>
      <description>ArcGIS Maps SDK for JavaScript のバージョン 4.10 以降、MapView 上のフィーチャ レイヤーのラベルやテキスト シンボルで使用するフォントは、pbf (Protocolbuffer Binary Format) で配信する必要があります。 デフォルトでは、pbf フォントは Esri が https://static.arcgis.com/fonts でホストしているフォントを使用できます。 利用可能なフォントの一覧は、Esri のガイドで確認できます（&amp;ldquo;Read more&amp;rdquo; をクリックしてページを展開してください）。
デフォルトで提供されていないフォントを使用したい場合は、自身で pbf フォントを作成し Web サーバーで配信することで、API から使用することができます。このガイドでは ArcGIS Maps SDK for JavaScript バージョン 4.x で独自のフォントを使用する手順を紹介します。
※ 本ガイドでご紹介する手順に関しては ESRIジャパンの技術サポート サービスの対象外となります。予めご了承ください。また、フォントの変換・配置を行う場合は、利用されるフォントの利用規約を予めご確認ください。
フォントの入手 今回は、Google フォント からダウンロードして PBF に変換します。
pbf フォントの作成 pbf ファイルは符号付き距離フィールドのセットとして以下の URL で配信する必要があります。これは MapBox GL JS のスタイル仕様と同じです。
https://fonts/&amp;lt;フォントスタック&amp;gt;/&amp;lt;ユニコード文字範囲&amp;gt;.pbf
pbf ファイルは node-fontnik を使用して、ttf や otf 等のフォントファイルから変換して作成できます。
 node-fontnik をクローンします。  git clone https://github.</description>
    </item>
    
    <item>
      <title>テーマ（Theme）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/theme/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Theme
テーマ（Theme） テーマは、エクスペリエンスの外観と使用感を定義します。エクスペリエンスは、すぐに使える (OOB) テーマがあり、カスタム テーマの作成も可能です。テーマ開発については、theme development をご覧ください。
app config では、アプリが使用するテーマは theme で定義されます。テーマをカスタマイズした場合、そのカスタマイズ内容は customTheme に保存されます。</description>
    </item>
    
    <item>
      <title>iOS</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-ios/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-ios/</guid>
      <description>出典：ArcGIS Maps SDK for Swift - Tutorials - Display a map
マップを表示する このチュートリアルでは ArcGIS Maps SDK for Swift を使用して、マップとベースマップ レイヤーを表示する方法を紹介します。
マップには、地理データのレイヤーが含まれています。マップには、ベースマップ レイヤーと、オプションで 1 つ以上のデータレイヤーを追加できます。マップ ビューを使用し、場所とズーム レベルを設定することで、マップの特定の領域を表示できます。
このチュートリアルでは、地形ベースマップ レイヤーを使用して、富士山付近を表示する地図を作成します。
このチュートリアルのトピックの背景情報については、Mapping API and location services guide の Maps (2D) と ベースマップ を参照してください。
前提条件 このチュートリアルを実施するには、以下が必要です。
 API キーにアクセスするための ArcGIS 開発者アカウント。アカウントをお持ちでない場合は、サインアップ（無料）してください。アカウントの作成方法は「開発者アカウントの作成」をご覧ください。 開発環境がシステム要件を満たしていることを確認します。  認証の設定 このチュートリアルで使用するセキュアな ArcGIS ロケーション サービスにアクセスするには、ArcGIS Location Platform または ArcGIS Online アカウントを使用して、API キー認証またはユーザー認証を実装する必要があります。
このチュートリアルでは、API キー認証またはユーザー認証を実装することができます。以下の違いを比較してください。
API キー認証  ユーザーはサイン インする必要がありません。 適切な権限を持つ API キーの認証情報を作成する必要があります。 API キーは長期間のアクセス トークンです。 サービス使用料は API キーの所有者/開発者に請求されます。 実装が最も簡単な認証方法です。 新規の ArcGIS 開発者に推奨される方法です。  詳しくは API キー認証をご覧ください。</description>
    </item>
    
    <item>
      <title>アイテムのクローン</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/python/cloning-content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/python/cloning-content/</guid>
      <description>参考：ArcGIS API for Python - Cloning Content
イントロダクション 企業または組織の開発環境からステージング、そして本番環境にコンテンツを移動させる最善の方法は何ですか？という質問がよくあります。このガイドでは、ある Web GIS から別の Web GIS にコンテンツを移動する方法について、可能なロードマップの 1 つを紹介します。これは、コンテンツを移動する際の基本的なソフトウェアの概念を示すためのテンプレートであり、ワークフローを他の種類のコンテンツ用に変更したり、管理者の特定のニーズに合わせて調整したりすることができます。
ContentManger の clone_items() メソッドは、ArcGIS Online、ArcGIS Enteprise、または ArcGIS Enterprise on Kubernetes などの元の組織から別の組織に、すべての用途と機能を持つ 1 つのアイテムの完全な複製を作成することを目的としています。アイテムのクローンを作成するときは、サポートされているアイテム、関連するアイテム、またはリソース アイテムとクローンされるアイテムとの関係を考慮する必要があります。
アイテムのクローンついて、基本的な用語を定義しておきましょう。クローンとは、ArcGIS Enterprise、ArcGIS Online、または ArcGIS Enterprise on Kubernetes から他のデプロイメント タイプへの、あらゆる組織間でのアイテムの転送を指します。これらのポータルのタイプについて説明するときに、これらのポータルのタイプを区別しようとして混乱しないために、デプロイメントのタイプに関係なく、コンテンツ作成元の組織を「ソース」と呼び、コンテンツのクローン先の組織を「ターゲット」と呼びます。
このドキュメントでは、ソースの管理者アカウントを使用してソース アイテムを収集し、ターゲットの管理者アカウントにクローンするワークフローを説明します。具体的には、ホスト フィーチャ レイヤーと Web マップをクローンする方法を説明します。Web マップは、これらのレイヤー アイテムとそのソース サービスを操作レイヤーの構成要素として利用できます。各アイテムの詳細については、ハイパーリンクをクリックしてください。
これは管理者のワークフローです。管理者アカウントを使用することで、ソース内でアイテムや依存関係にアクセスすること及び、ターゲット内でアイテムやサービスを作成するための必要な権限が保証されます。ターゲットの管理者は、ユーザー アカウントを作成し、必要に応じてアイテムの所有権やグループ メンバーシップを再割り当てすることができます。これは、ポータルが外部のアイデンティティ ストアによって管理されるユーザーを持つ場合、最も単純なワークフローになります。
対応アイテム 冒頭に記載したように、Python API の開発者は以下のアイテム タイプを転送する用に clone_items() メソッドを設計しました。
 Web マップ ホスト フィーチャ レイヤー ホスト フィーチャ レイヤーのビュー フィーチャ コレクション ArcGIS survey123 フォーム ArcGIS Workforce プロジェクト ArcGIS StoryMaps  Cloning Complex Items を参照   ArcGIS Experience Builder  Cloning Complex Items を参照   ArcGIS Dashboards  Cloning Complex Apps を参照   ArcGIS QuickCapture プロジェクト ArcGIS Notebooks シンプルなタイプ  ダウンロードオプションのあるアイテム。(Web GIS に含まれ、ダウンロード可能なアイテムについては、Data files を参照) ジオデータベースやシェープファイル、コードサンプル、zip ファイル、その他のパッケージなどが含まれます。    clone_items() は、上記の複雑なアイテムの依存関係をクローンします。例えば、既存の Web アプリケーションをクローンする場合、Web マップと、そのマップで参照されるすべてのホスト フィーチャ レイヤーをクローンします。</description>
    </item>
    
    <item>
      <title>ウィジェット UI の作成</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/widget-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/widget-ui/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Create UI for widget
Experience Builder のベースとなる Widget クラスは、React のコンポーネントサブクラスから拡張されています。PureComponent から拡張されており、render() と呼ばれる関数を提供しています。UI の作業のほとんどは、この関数の内部で行われることが予想されます。
JSX の記述 UI テンプレートの作成に使用される React の構文は JSX と呼ばれています。これは HTML を書くのと非常に似ていますが、JavaScript の機能を完全に組み込んでいます。
JSX の詳細を参照してください。
ここでは、ウィジェットの UI にいくつかの基本的な HTML 要素を追加する簡単な例を示します。
// in widget.tsx: import { React, AllWidgetProps } from &amp;#39;jimu-core&amp;#39;; export default class Widget extends React.PureComponent&amp;lt;AllWidgetProps&amp;lt;{}&amp;gt;, any&amp;gt;{ render() { return &amp;lt;div className=&amp;#34;myWidget&amp;#34;&amp;gt; &amp;lt;p&amp;gt;This is a sample widget&amp;lt;/p&amp;gt; &amp;lt;button type=&amp;#34;button&amp;#34; style={{background: &amp;#39;orange&amp;#39;}}&amp;gt;I&amp;#39;m a button&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt;; } } Output 例: Jimu UI ライブラリの使用 Jimu フレームワークは、開発者がウィジェット開発で使用するコンポーネントの UI ライブラリを提供しています。</description>
    </item>
    
    <item>
      <title>ウィジェット（Widget）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/widget/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Widget
ウィジェット（Widget） ウィジェットは設定可能な機能単位で、エクスペリエンスのページを作成するために使用されるビルディング ブロックです。Experience Builder は、マップ、ボタン、リストなどのすぐに使える（OOB）ウィジェットが用意されており、カスタム ウィジェットを作成することも可能です。ウィジェットは通常、ユーザーがビルダー環境で機能を設定できるように設定 UI を提供します。ウィジェットに設定可能なオプションがありますが、設定 UI が含まれていない場合は、JSON エディタを使用して設定することが可能です。
ウィジェットの実装についてはこちらをご覧ください。
app config では、widgets でウィジェットを定義します。</description>
    </item>
    
    <item>
      <title>ミートアップ</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/other/hackathon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/other/hackathon/</guid>
      <description>ミートアップ参加者を支援するリソースをまとめています。
オープンデータを入手する ArcGIS Open Data では ArcGIS のクラウドで公開されている全世界のオープンデータを検索・参照・ダウンロードが可能です。 自由に使える地理データを取得する方法を紹介します。
 オープンデータの入手 (ArcGIS Open Data コミュニティサイト)  地図にデータを可視化する 座標情報を持った地理データや住所情報を持ったテキストデータなどを可視化して、アプリに組み込むための地図を作成する方法や Tips を紹介します。 なお、データ可視化の作業はコーディングが不要なので、プランナーやデザイナーの方でも取り組んでいただくことができます。
 データ可視化のワークフロー データ可視化の手順 データ可視化の手順（3D） 地図上に賢くデータを可視化するための 6 つの方法  アプリに地図を組み込む アプリに ArcGIS の地図を組み込む際に便利な開発キットやライブラリです。アプリ作成ツールを活用することで、ノンコーディングでアプリを作成することも可能です。
コードを書く JavaScript  ArcGIS Web API: リファレンス (英語) | 日本語ガイド Leaflet.js (Esri Leaflet): リファレンス (英語) | 日本語ガイド(ブログ記事)  Android  ArcGIS Runtime SDK: リファレンス (英語) | 日本語ガイド  iOS  ArcGIS Runtime SDK: リファレンス (英語) | 日本語ガイド  .</description>
    </item>
    
    <item>
      <title>Flutter</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-flutter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-flutter/</guid>
      <description>出典：ArcGIS Maps SDK for Flutter - Tutorials - Display a map
マップを表示する このチュートリアルでは ArcGIS Maps SDK for Flutter を使用して、マップとベースマップ レイヤーを表示する方法を紹介します。
マップには、地理データのレイヤーが含まれています。マップには、ベースマップ レイヤーと、オプションで 1 つ以上のデータ レイヤーを追加できます。
このチュートリアルでは、地形図ベースマップ レイヤーを使用して、富士山付近を表示する地図を作成します。
このマップとコードは、他の 2D チュートリアルの出発点として使用されます。
このチュートリアルのトピックの背景情報については、Mapping API and location services guide の Maps (2D) と ベースマップ を参照してください。
Android Studio の最新リリースである Meerkat 2024.3.1 以降を使用している場合、pub.dev で arcgis_maps パッケージを使用すると、SDK の依存関係の管理で問題が発生する可能性があります。 これを解決するには、Flutter のデフォルト JDK として JDK 17 を設定する必要があります。
  macOS の場合：Homebrew を使用して macOS に JDK 17 をインストールします。</description>
    </item>
    
    <item>
      <title>Jimu</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/jimu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/jimu/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Jimu
Jimu Jimu は、設定可能なエクスペリエンスを作成するために使用される JavaScript ライブラリーで、以下のようなパッケージで構成される拡張フレームワークです。
 jimu-arcgis パッケージは、ArcGIS Maps SDK for JavaScript を実行するためのクラスとメソッドが含まれています。よく使われるクラスは JimuMapView と JimuMapViewComponent です。 jimu-core パッケージは、ウィジェットのプロパティ、メッセージ アクション、データ ソースを扱うためのインターフェイスと型を提供します。また、エクスペリエンスを通じて使用されるいくつかのクラスも定義しています。 jimu-for-builder パッケージは、SettingChangeFunction や WidgetSettingProps といったウィジェット設定ページを開発するためのクラスを提供します。 jimu-for-test パッケージは、ユニット テストに使用できるクラス、型、関数が含まれています。 jimu-ui パッケージは、エクスペリエンスが使用するすべての UI コンポーネントが含まれています。パフォーマンス上の理由から、UI コンポーネントは 3 つのカテゴリに分かれています。jimu-ui のエントリーには、Button や Input などの一般的な UI コンポーネントが含まれています。jimu-ui/basic 以下のエントリーには、ColorPicker や QRCode などの目的に応じたコンポーネントが含まれます。jimu-ui/advanced 以下のエントリーは重く、複雑です。例えば、setting-components エントリーには、ウィジェットの設定で使用される可能性のある複数のコンポーネントが含まれています。  これらのパッケージは同じ構造パターンを使用しているため、同じベストプラクティスに沿って使用することができます。各パッケージは import するためのいくつかのエントリーを定義し、これらのエントリーはパッケージのルート フォルダーの下に置かれます。lib フォルダー内のコンテンツは，パッケージの内部コンテンツとみなされますので，ウィジェットには import しないでください。例えば、jimu-ui の Button コンポーネントを使用する必要がある場合は、import {Button} from &#39;jimu-ui&#39; ではなく、import {Button} from &#39;jimu-ui/lib/components/button&#39; のようにインポートする必要があります。</description>
    </item>
    
    <item>
      <title>ウィジェットでデータ ソースを使用</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/use-data-source-in-widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/use-data-source-in-widget/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Use data source in widget
データ ソースは、ウィジェットがデータにアクセスする方法を定義します。データ ソースを使用して行いたいことは様々ですが、それぞれについて紹介します。
 ウィジェットの設定でデータ ソースを選択 ウィジェット ランタイムのデータを読み込んで表示 ユーザー入力に基づくデータのフィルタリングやクエリ データ上の選択を処理 ArcGIS Maps SDK for JavaScript のフィーチャ オブジェクトとデータ ソースの同期 ウィジェットで出力データ ソースの生成 ウィジェットでメッセージの公開  本ドキュメントで使用している appConfig という変数は、アプリの config JSON オブジェクトを指します。ArcGIS Online または Enterprise 版では、アプリの config JSON はアイテム データとして保存され、Developer Edition では server/public/apps/[appId]/config.json (公開版) または server/public/apps/[appId]/resources/config.json (ドラフト版) の下に保存されます。
ウィジェットの設定でデータ ソースを選択 ウィジェットの設定でデータ ソースを選択するには、DataSourceSelector コンポーネントを使用する必要があります。Experience Builder は、複数の種類のデータ ソースをサポートしています。これらのデータ ソースは jimu-core と jimu-arcgis の 2 つのパッケージに入っています。jimu-core の DataSourceTypes と jimu-arcgis の DataSourceTypes をご覧ください。jimu-arcgis のデータ ソースは ArcGIS Maps SDK for JavaScript に依存しており、jimu-core のデータ ソースは依存していません。</description>
    </item>
    
    <item>
      <title>Unity</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-unity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-unity/</guid>
      <description>出典：ArcGIS Maps SDK for Unity - Tutorials - Display a map(UI)
マップを表示する (UI) Unity の Map Creator UI と High Definition Render Pipeline を使用して、ベースマップ、標高ソースの設定、データ レイヤーの追加、特定エリアの表示方法をご紹介します。
このチュートリアルでは、ベースマップ レイヤー サービスとデータ レイヤーを含むローカル シーンを Unity で作成します。
ArcGIS Map SDK for Unity は、現在 ESRIジャパンにおけるサポート対象外の製品です。
ESRIジャパンで提供するEsri 製品サポート サービスや開発者サポート サービスはご利用いただけませんので、予めご了承ください。
前提条件 このチュートリアルを実施するには、以下が必要です。
  ArcGIS サービスにアクセスするには、ArcGIS Location Platform アカウントまたは ArcGIS Online アカウントと API キーが必要です。アカウントをお持ちでない場合は、サインアップ (無料) してください。アカウントの作成方法は「開発者アカウントの作成」をご覧ください。
API キー ページが開発者ダッシュボードに表示されない場合は、アカウントを ArcGIS Location Platform アカウントにアップグレードする必要があります。
  開発環境がシステム要件を満たしていることを確認してください。</description>
    </item>
    
    <item>
      <title>ウィジェット間の通信</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/widget-communication/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/widget-development/widget-communication/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Widget communication
ArcGIS Experience Builder ウィジェットは機能の単位であり、ウィジェットは 1 つの機能に焦点を当てます。しかし、多くの場合、タスクを完了するために複数のウィジェットを連携させる必要があります。そのためには、フレーム ワーク レベルでウィジェット同士が通信できる方法が必要です。Experience Builder では次の方法でこれを実現できます。
 Configurable (設定によって実現)  ウィジェット間で同じデータ ソース/データ ビューを使用する ウィジェットの出力するデータ ソースを使用する メッセージ/アクションを使用する データ アクションを使用する   Programming (プログラミングによって実現)  ウィジェットの state をウィジェット間で共有する ウィジェット間で state を共有するために、独自の redux ストア/アクション/リデューサーを用意する    Configurable とはユーザーがビルダー内でウィジェット間の通信方法を設定できることを意味します。Programming とはウィジェット間の通信がコードによって行われることを意味します。
ウィジェット間で同じデータソース/データビューを使用する 複数のウィジェットが同じデータ ソースまたはデータ ビューを使用する場合、それらのウィジェットは同じ選択、同じデータ レコードなど、同じデータ ソースの状態を取得できます。ウィジェットはこれらのデータを使用してデータ ソースの状態を同期できます。例えば、複数のウィジェットが同じデータ レコードを読み込んで、異なるビューを表示することができます。あるウィジェットはユーザーに選択を行わせ、別のウィジェットは選択状態を監視し、選択されたデータの詳細を表示することができます。
複数のウィジェットが同じデータ ソースの異なるデータ ビューを使用しても選択内容がデータ ビューのフィルター条件を満たしていれば、同じ選択内容を取得できます。
詳細はウィジェットでデータ ソースを使用を参照してください。
ウィジェットの出力するデータ ソースを使用する 詳細はウィジェット出力データ ソースを参照してください。
メッセージ/アクションを使用する 詳細はメッセージとアクションを参照してください。
データ アクション 詳細はデータ アクションを参照してください。</description>
    </item>
    
    <item>
      <title>データ ソース（Data source）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/data-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/data-source/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Data sources
データ ソース（Data source） データ ソースは、ウィジェットがどのようにデータにアクセスするかを定義します。例えば、データがリモートサーバーからのものである場合、ウィジェットはクライアント側にクエリーするために、データ ソース クラスを使用します。ウィジェットでデータが生成された場合、それ自身をデータ ソース クラスに入れることで、別のウィジェットで使用することができます。
高レベルでは、データ ソースはスキーマといくつかのレコードを持ち、子/親データ ソースを持つ場合があります。さらに、すべてのデータ ソースは、それを識別するのに役立つ型、ID、ステータスがあります。 DataSource インターフェイスは jimu-core パッケージで定義されており、これは以下のメソッドとプロパティのいくつかを定義しています。
 id: データ ソースID。 type: どのタイプのデータ ソースを使っているかチェックするため、ウィジェットで使っているプロパティ。 fetchSchema: すべてのデータ ソースは、スキーマを返すためにこのメソッドを実装しなければなりません。これは、リモート データ サービスで定義されたスキーマです。例えば、ユーザーがExperience Builder でデータ ソースを追加した場合、データ ソースのスキーマはアプリ構成に保存されません。代わりに、最新のデータ ソース スキーマを取得するために fetchSchema メソッドが呼び出されます。 getSchema: ウィジェットがデータ ソースのスキーマとフィールドにアクセスするために使用するメソッドです。 getRecords: ウィジェットがデータ ソースのデータ レコードにアクセスするために使用するメソッドです。 getStatus: ウィジェットはこのメソッドを使用してデータ ソースのステータスを取得します。これらのステータスには、NotReady、Unloaded、Loading、Loaded および LoadError があります。NotReady はウィジェットの出力データ ソース専用です。出力データ ソースのインスタンスが作成されても、そのインスタンスは使用する準備ができていません。出力データ ソースを生成するウィジェットはデータ ソースを使用可能な状態にするアクション (DataSourceChanged) を送る必要があります。データ ソースのステータスが準備できていない場合、クエリーは空の結果を返します。その他のクエリー可能なデータ ソースでは、既定のステータスは Unloaded です。データが要求されると Loading に変更され、最後に Loaded または LoadError に変更されます。  データ ソースは DataSourceManager によって管理され、作成および取得できます。</description>
    </item>
    
    <item>
      <title>Unreal Engine</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-unreal-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/guide/create-app/create-startup-app-unreal-engine/</guid>
      <description>出典：ArcGIS Maps SDK for Unreal Engine - Tutorials - Display a map (UI)
マップを表示する (UI) Modes Panel UI を使用したベースマップ、標高ソースの設定、データ レイヤーの追加、特定エリアの表示方法をご紹介します。
このチュートリアルでは、ベースマップ レイヤー サービスとデータ レイヤーを含むローカル シーンを Unreal Engine で作成します。
ArcGIS Map SDK for Unreal Engine は、現在 ESRIジャパンにおけるサポート対象外の製品です。
ESRIジャパンで提供する Esri 製品サポート サービスや開発者サポート サービスはご利用いただけませんので、予めご了承ください。
前提条件 このチュートリアルを実施するには、以下が必要です。
  ArcGIS サービスにアクセスするには、ArcGIS Location Platform アカウントまたは ArcGIS Online アカウントと API キーが必要です。アカウントをお持ちでない場合は、サインアップ (無料) してください。アカウントの作成方法は「開発者アカウントの作成」をご覧ください。
API キー ページが開発者ダッシュボードに表示されない場合は、アカウントを ArcGIS Location Platform アカウントにアップグレードする必要があります。
  開発環境がシステム要件を満たしていることを確認してください。
  インストールとセットアップの手順に従って、プラグインをインストールしてください。必ずサンプル アセットをインポートしてください。</description>
    </item>
    
    <item>
      <title>データ アクション（Data action）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/data-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/data-action/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Data action
データ アクション（Data action） データ アクションは、データ レコードのコレクションを拡張可能な方法で処理する方法を提供します。
データ アクションは Data Action インターフェイスによって定義され、isSupported と onExecute という 2 つの重要なメソッドを持っています。
 isSupported が呼び出されると、アクションがデータを処理できるかがチェックされます。サポートされていないデータアクションは実行中は非表示になります。 onExecute メソッドはユーザーがデータ アクションをクリックしたときに呼び出されます。  どちらのメソッドも、データ ソース、オプションのデータ レコード配列およびフィールドを含む DataRecordSet インスタンスの配列を取得できます。これら 2 つのメソッドは、DataLevel と widgetId パラメーターも受け取ります。DataLevel は、DataRecordSet がすべてのレコードを含むか、レコードのサブセットを含むかを示すために使用されます。
フレームワークは CSV へのエクスポートや JSON へのエクスポートなどのデータ アクションを提供します。ウィジェットもデータ アクションを提供できます。例えば、Map ウィジェットは &amp;ldquo;画面移動 (pan to)&amp;rdquo; と &amp;ldquo;ズーム (zoom to)&amp;rdquo; というデータアクションを提供します。ウィジェットにデータ アクションを実装するには、manifest.json でデータアクションを宣言し、AbstractDataAction を継承したクラスを作成します。
データ アクションによっては、アクションの動作を設定するための UI が必要な場合があります。これを実現するには、manifest.json で settingUri を宣言します。アクション設定の UI コンポーネントは、いくつかの差し込まれたプロパティを持つ React コンポーネントです。ユーザーが設定を変更したら、this.</description>
    </item>
    
    <item>
      <title>デプロイ パターン</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/deploy-pattern/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/deploy-pattern/</guid>
      <description>トピック  概要 Web アプリケーションをデプロイ ウィジェットをデプロイ  概要 ArcGIS Experience Builder (Developer Edition) (以下 Developer Edition) では ArcGIS Experience Builder を拡張して、独自の Web アプリケーションやウィジェットを作成することが可能です。エンド ユーザーの利用形態や要件により最適なデプロイは異なりますが、このページでは以下の 2 つの主要なデプロイ パターンと、それぞれのデプロイ方法についてご紹介します。
 Web アプリケーションをデプロイ 全体像  Web アプリケーションを作成し、独自のサーバーでホストすることができます。特定の業務で継続的に利用されるアプリ等、ユーザーによる設定変更が不要な場合や、ユーザーに設定変更をさせたくない場合等に活用できます。   必要なコンポーネント  開発時  Node.js Developer Edition   運用時  ArcGIS Enterprise または ArcGIS Online Web サーバー (ArcGIS Enterprise の Web サーバーと併用も可)    手順概要 以下は Web アプリケーション作成から、デプロイ、実際の運用までの流れの概要です。
 カスタム ウィジェットを含む Web アプリケーションを作成  Developer Edition を用いたウィジェットの開発や Web アプリケーションの作成には Node.</description>
    </item>
    
    <item>
      <title>メッセージとアクション（Message and action）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/message-action/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/message-action/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Message and action
メッセージとアクション（Message and action） メッセージ/アクションは、ウィジェットからウィジェット、ウィジェットからフレームワーク、フレームワークからウィジェットへの通信をサポートする方法です。 ウィジェット/フレームワークはメッセージを公開したり、メッセージを聞いたりすることができます。メッセージは jimu フレームワークによって定義される MessageType によって識別されます。jimu には ExtentChange や DataRecordsSelectionChange のようないくつかのメッセージタイプが定義されています。
メッセージの発行（Publishing a message） ウィジェットは、MessageManager.getInstance().publishMessage(message) を呼び出してメッセージを発行します．例えば、List ウィジェットでは，リストアイテムがクリックされたときに DataRecordsSelectionChange メッセージを発行したり，Map ウィジェットでは，ビューが変更されたときに ExtentChange メッセージを発行して，List ウィジェットのコンテンツを更新したりします。以下の MessageTypes がサポートされています。
 StringSelectionChange ExtentChange DataRecordsSelectionChange DataRecordSetChange  各メッセージには、それを定義するクラスがあります。例えば、ExtentChange メッセージは ExtentChangeMessage クラスで定義され、このクラスはメッセージのペイロードである extent プロパティを定義します。
メッセージを発行するために、ウィジェットは manifest.json ファイルで発行メッセージを宣言する必要があります。
&amp;#34;publishMessages&amp;#34;: [ &amp;#34;DATA_RECORDS_SELECTION_CHANGE&amp;#34; ] メッセージ アクションの作成（Creating a message action） メッセージ アクションを作成するには、AbstractMessageAction クラスを継承する必要があります。メッセージ アクションの開発に役立つメソッドや関数がいくつかあります。
filterMessageType メソッドは、利用可能なアクションのフィルタリングに使用されます。
export default class QueryAction extends AbstractMessageAction{ filterMessageType(messageType: MessageType, messageWidgetId?</description>
    </item>
    
    <item>
      <title>スターター ウィジェットの作成</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/tutorials/create-starter-widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/tutorials/create-starter-widget/</guid>
      <description>出典：ArcGIS Experience Builder - Tutorials - Create Starter Widget
[概要] ここでは、ウィジェットの基本実装の構築方法について学習します。
ArcGIS Experience Builder では、さまざまなウィジェットから選択し、対話形式でアプリケーションを構築できます。これらのアプリケーションはエクスペリエンスと呼ばれます。ユーザーにより多くのオプションを提供する場合は、独自のカスタム ウィジェットを作成し、ArcGIS Experience Builder に追加できます。作成するウィジェットのタイプは、求める機能によって異なります。マップと対話するウィジェットを作成することも、ArcGIS の外部で処理を実行するウィジェットを作成することもできます。ウィジェットを作成してインストールすると、ArcGIS Experience Builder によって自動的にウィジェットが検出され、ユーザーが使用できるようになります。
このチュートリアルでは、新しいウィジェットの作成に必要なフォルダーと主なファイルを作成します。これらのファイルは、他のウィジェット チュートリアルの開始点として使用されます。
[前提条件] ArcGIS Experience Builder をダウンロード、インストール、および構成してください。
[ステップ] [新しいフォルダーを作成する] 新しいウィジェットを作成する最初のステップは、ウィジェット ファイル用のフォルダーを作成することです。
  ファイル ブラウザーで、ArcGIS Experience Builder を解凍したフォルダーに移動します。
ArcGIS Experience Builder の開発者向け追加機能のインストール方法の詳細については、インストールガイドを参照してください。
  ArcGISExperienceBuilder フォルダーで、次のパスを展開します
 /client/your-extensions/widgets   widgets フォルダーに、starter-widget という新しいフォルダーを作成します。 パスは以下のようになります
 /client/your-extensions/widgets/starter-widget ウィジェット フォルダーにスペースを含めることはできません。ウィジェットの構築については、こちらのドキュメントを参照してください。
  [マニフェスト ファイルの作成] ウィジェットのプロパティを定義するには、マニフェスト ファイルが必要です。これらは、ArcGIS Experience Builder のロード時に読み込まれます。</description>
    </item>
    
    <item>
      <title>デプロイ</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/deployment-topics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/deployment-topics/</guid>
      <description>ArcGIS Experience Builder で作成したエクスペリエンスは、ダウンロードして Web サーバーにホストすることができます。プライベート コンテンツを使用しているエクスペリエンスは、ArcGIS Online または ArcGIS Enterprise にアプリを登録する必要があります。エンド ユーザーに最適なユーザー エクスペリエンスを提供するために、エクスペリエンスを展開する前にシステム要件を参照してください。
エクスペリエンスのダウンロード エクスペリエンス ギャラリーのホームページでエクスペリエンスをダウンロードするには、以下のように ● (3 つのドット) をクリックして ダウンロード をクリックします。ZIP ファイルが作成され、ローカル ドライブにダウンロードされます。ZIP ファイルは、お使いのブラウザ用に定義されたダウンロード ディレクトリにあります。
アプリケーションをダウンロードするには事前にアプリケーションを公開する必要があります。ダウンロードされたエクスペリエンスには Web サーバーのいくつかのデフォルトの設定を構成する web.config ファイルが付属しており、このデフォルト web.config に ArcGIS Maps SDK for JavaScript の設定が含まれるようになりました。
ダウンロードに失敗した場合は、お使いのマシンでアンチウイルス ソフトがオンになっているか確認してください。アンチウイルス ソフトをオフにして、もう一度試してください。
エクスペリエンスのデプロイ エクスペリエンスを Web サーバーにデプロイするには、次の手順を実行します。
 ダウンロードしたエクスペリエンスを解凍し、フォルダーを Web サーバーにコピーします。 アプリにプライベート コンテンツがある場合は、手順 3 ～ 6 を完了し、そうでない場合はエクスペリエンスのデプロイは完了です。 アプリを追加して登録します。詳細については、ArcGIS Online/ArcGIS Enterprise を使用した Client ID の作成 を参照してください。 AppID をコピーし、Experience アプリのルート ディレクトリ (例：&amp;lt;.</description>
    </item>
    
    <item>
      <title>マップ/シーン ビュー（Map/Scene View）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/map-scene-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/map-scene-view/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Map/Scene View
マップ/シーン ビュー（Map/Scene View） ビューの概念は ArcGIS Maps SDK for JavaScript と同じですが、Experience Builder では、ウィジェットやメッセージ/アクションなどを作成する際に一貫した拡張性モデルを確保するために、ビューは JimuMapView としてラップされます。JimuMapView オブジェクトを作成するには、ウィジェットは JimuMapViewManager.createJimuMapView() メソッドを使用します。JimuMapView オブジェクトは、主に以下のプロパティを持っています。
 view: マップ/シーン ビュー オブジェクト datasourceId: ビューを作成するデータソース (webmap/webscene) mapWidgetId: オブジェクトを作成するビュー jimuLayerViews: レイヤー ビュー オブジェクトのラッパー  Experience Builder では、マップ ウィジェットが JimuMapView オブジェクトを作成します。ウィジェットが JimuMapView オブジェクトを使用する必要がある場合、設定ページの MapWidgetSelector コンポーネントを使用して マップ ウィジェットを選択することができます。マップ ウィジェットの ID を取得した後、ウィジェットは &amp;lt;JimuMapViewComponent&amp;gt; を使って、作成された JimuMapView オブジェクトを取得することができます。JimuMapView オブジェクトを選択するには、設定ページの JimuMapViewSelector コンポーネントを利用します。</description>
    </item>
    
    <item>
      <title>マップの座標を取得</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/tutorials/get-map-coordinates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/tutorials/get-map-coordinates/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Get map coordinates
概要 学習内容：カスタム ウィジェットでマップの緯度と経度、縮尺、ズーム レベルを表示する方法
ArcGIS Experience Builder 標準のマップ ウィジェットには、ArcGIS Maps SDK for JavaScript の View インスタンスが含まれています。View はマップと対話し、位置情報を取得する方法を提供します。View のプロパティとイベント ハンドラーを使用して、マップ画面上の任意のポイントの位置に関する現在の空間参照の情報、緯度と経度、縮尺、ズーム レベルを確認することができます。確認した情報は、カスタム ウィジェットに表示したり、地球上の他の場所に移動したり、エクスペリエンスの開始時にマップの初期表示範囲を設定したりするために使用できます。
このチュートリアルでは、マップ ウィジェットにアクセスし、カスタム ウィジェットでマウス カーソルが地図上にある時の緯度と経度を表示します。
前提条件 ArcGIS Experience Builder のインストール ガイドを参照して、ArcGIS Experience Builder (Developer Edition) のダウンロード、インストール、設定を行います。
ステップ スターター ウィジェットの入手  スターター ウィジェット テンプレートをこちらからダウンロードします。 すでに、スターター ウィジェットの作成 チュートリアルを完了している場合は、それを使用して開始できます。/client/your-extensions/widgets 内のウィジェット フォルダーをコピーしてください。 手順 1 でテンプレートをダウンロードした場合は ArcGIS Experience Builder フォルダー内で、zip ファイルを以下のパスに展開してください。 /client/your-extensions/widgets  ウィジェット名の変更  ArcGIS Experience Builder の client フォルダーで npm start が実行されたターミナルがある場合、ctrl + c を押してスクリプトを停止します。 ファイル ブラウザーで Experience Builder が展開されたフォルダーに移動します。 Experience Builder フォルダー内で以下のパスを開きます。 /client/your-extensions/widgets widgets フォルダー内で、starter-widget フォルダーの名前を get-map-coordinates に変更します。 新しく名前を変更した get-map-coordinates フォルダー内で、manifest.</description>
    </item>
    
    <item>
      <title>拡張ポイント（Extension points）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/extension-points/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/extension-points/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - Extension points
拡張ポイント（Extension points） Jimu ライブラリーを使用すると、ArcGIS Experience Builder を拡張することができます。多くの場合、カスタム ウィジェットやテーマを作成することで Experience Builder を拡張します。また、Jimu エクステンションにより、より深いカスタマイズを行うことができます。
Jimu ライブラリーでは、特定の拡張ポイントが定義されています。拡張ポイントとは、エクステンションが準拠すべきインターフェイスを定義したものです。エクステンションとは、拡張ポイントのインターフェイスを実装したクラスのことです。このインターフェイスは、jimu-core からエクスポートされた extensionSpec です。ウィジェットでエクステンションを提供するには、ウィジェットの manifest.json ファイルでエクステンションを宣言する必要があります。
&amp;#34;extensions&amp;#34;: [ { &amp;#34;point&amp;#34;: &amp;#34;&amp;lt;拡張ポイント名&amp;gt;&amp;#34;, &amp;#34;uri&amp;#34;: &amp;#34;&amp;lt;拡張される URI、関連するソース フォルダー&amp;gt;&amp;#34; } ] Jimu では、API ドキュメントで定義されている様々な拡張ポイントが定義されています。よく使われる拡張ポイントは以下の 2 つです。
  AppConfigProcessor - この拡張ポイントのエクステンションは、AppConfig を受け取り、処理された app config を解決するプロミスを返す必要があります。これは、文字列の翻訳（Translation サンプルを参照）のように、app config を実行時に修正するために使用できます。この処理は、app config がロードされた直後に起動されます。
  DependencyDefine - この拡張機能を使用すると、初期化が必要なサード パーティーのライブラリーを使用できます。
  ReduxStore - この拡張機能を使用すると、ウィジェットの Redux 状態の actions と reducers を定義できます。</description>
    </item>
    
    <item>
      <title>AppConfig</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/appconfig/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/core-concepts/appconfig/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - AppConfig
AppConfig とは ArcGIS Experience Builder における AppConfig オブジェクトは、エクスペリエンスの構成を定義する JSON ベースの設定ファイルです。アプリケーションの動作、レイアウト、外観、データ接続などを定義するための、すべての重要な設定や要素が含まれています。これには、ページ、レイアウト、ウィジェット、データ ソースなどを管理するためのプロパティも含まれます。
AppConfig は、エクスペリエンスに関連するすべての設定のリポジトリーとして機能し、開発者がアプリケーションを簡単に、管理、カスタマイズできるようにします。新しいエクスペリエンスが初期化されると作成され、アプリケーションの state の appConfig プロパティに保存されます。
AppConfig を更新する方法 AppConfig はイミュータブル (不変) なオブジェクトです。設定値を更新するには、更新された設定を含む新しい appConfig インスタンスをプログラムで作成する必要があります。
以下は、ウィジェットの実行時に jimu-core ライブラリーを使用して appConfig を更新する方法の例です。プログラムで appConfigChanged() アクションを割り当てることで、appConfig を更新できます。
import { appActions, ReactRedux } from &amp;#34;jimu-core&amp;#34; // get the appConfig const appConfig = ReactRedux.useSelector((state: IMState) =&amp;gt; state.appConfig) // modify the appConfig const newAppConfig = appConfig.setIn([&amp;#34;pages&amp;#34;, pageId, &amp;#34;label&amp;#34;], theNewLabel) dispatch(appActions.appConfigChanged(newAppConfig)) appConfig を更新する最も一般的な方法は、ウィジェット構成画面でウィジェットの設定を更新することです。このとき、プログラムで props.</description>
    </item>
    
    <item>
      <title>Web AppBuilder からの移行</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/migrating-from-web-appbuilder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/migrating-from-web-appbuilder/</guid>
      <description>出典：ArcGIS Experience Builder - Guide - migrating-from-web-appbuilder
はじめに ArcGIS Experience Builder は、Web AppBuilder とはさまざまな点で異なります。これらの違いから、Web AppBuilder から Experience Builder へカスタム ウィジェットやテーマを直接変換することはできません。手動のプロセスですが、Experience Builder 用にウィジェットやテーマを再構築する際に考慮すべきヒント、テクニック、および推奨プラクティスを紹介します。
これは網羅的なものではありませんし、開発者が手動で書き直す作業であることに変わりはありません。これらの手順は、Experience Builder 内でウィジェットを再ビルドする際の準備と計画に役立つように提供されます。
スタートアップ まず、Experience Builder のドキュメントを確認し、ウィジェット開発のスタート ドキュメントに従って TypeScript、React、JSX、Jimu を学びます。
ウィジェットの新規作成 コア技術の概念に慣れたら、ブランク/スターターの Experience Builder のウィジェットを作成し、ビルド環境が正しく設定されていることを確認します。次に、Web AppBuilder のカスタム ウィジェットから新しい Experience Builder のカスタム ウィジェットにコードを移動し、次の点に注意してください。
  どちらのウィジェットにも manifest.json がありますが、Experience Builder のものは若干異なりますので、新しい manifest.json の形式を確認し、適宜更新してください。
  dojo 固有のモジュールはすべて置き換える必要があります。 - たとえば、dojo/domClass モジュールの domClass 関数を次のように使用する場合
domClass.contains(domNode, &amp;#34;myClassName&amp;#34;); この場合、Dojo 以外の選択肢でそれを書き直す必要があります。
domNode.classList.contains(&amp;#34;myClassName&amp;#34;);   Dojo はブラウザのサポートを標準化してくれますが、ネイティブの JavaScript の機能を使うことはできませんので、MDN や CanIUse などのサイトで、使用する機能のブラウザ サポートを確認する必要があります。この場合、例えば CanIUse によると、classList はすべての主要なブラウザでサポートされていると述べています。</description>
    </item>
    
    <item>
      <title>マップにレイヤーを追加</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/tutorials/add-layers-to-a-map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/experience-builder/tutorials/add-layers-to-a-map/</guid>
      <description>出典：ArcGIS Experience Builder - Tutorials - Add layers to a map
概要 学習内容：カスタムウィジェットからマップにレイヤーを追加する方法
ArcGIS Experience Builder のマップ ウィジェットは、ロードするように構成されている Web マップに基づいてレイヤーを自動的にロードします。ワークフローによっては、ウィジェットとのユーザー インタラクションに基づいてマップに動的にレイヤーを追加するカスタム ウィジェットが必要な場合があります。
このチュートリアルでは、マップにフィーチャ レイヤーを追加するためのボタンをウィジェットに追加します。
前提条件  ArcGIS Experience Builder のインストール ガイドを参照して、 ArcGIS Experience Builder (Developer Edition) をダウンロード、インストール、設定を行います。  ステップ スターター ウィジェットの取得   スターター ウィジェットのテンプレートをこちらからダウンロードします。 すでにスターター ウィジェットの作成チュートリアルを完了している場合は、それを使用して開始できます。client/your-extensions/widgets 内のウィジェット フォルダーをコピーしてください。
  手順 1 でテンプレートをダウンロードした場合は ArcGIS Experience Builder フォルダー内で、zip ファイルを以下のパスに展開してください。
/client/your-extensions/widgets
  ウィジェット名の変更  ArcGIS Experience Builder の client フォルダーで npm start が実行されたターミナルがある場合、ctrl + c を押してスクリプトを停止します。 ファイル ブラウザーで、Experience Builder を展開されたフォルダーに移動します。 Experience Builder フォルダーで、以下のパスを展開します。</description>
    </item>
    
    <item>
      <title>スタートアップ ガイド</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/create-startup-app-wab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/webappbuilder/create-startup-app-wab/</guid>
      <description>ArcGIS Web AppBuilder とは？ ArcGIS Web AppBuilder（以下、Web AppBuilder）は、コーディング不要、インタラクティブな操作で Web アプリを作成可能なアプリケーション ビルダーです。
Web AppBuilder は、Web マップと呼ばれる、さまざまなデータを地図上に重ね合わせ、表示スタイルやポップアップを定義したマップをもとにアプリを作成します。
アプリの外観を決めるテーマと、機能を提供するウィジェットを選択していくことで、独自のアプリを作成していきます。
Web アプリの作成   Web マップの作成
ハッカソン向け資料 - 地図にデータを可視化する を参考に、アプリで使用する Web マップを作成します。
  Web AppBuilder の起動
作成した Web マップを保存したら、[共有] をクリックします。[Web アプリの作成] から [Web AppBuilder] を選択、[開始] をクリックして Web AppBuilder を起動します。   テーマの選択
アプリの外観は、テーマと呼ばれるテンプレートによって決められます。テーマには、色を設定するスタイルや、ウィジェットの配置を定義するレイアウトなどが含まれます。
  ウィジェットの追加
アプリの機能は、ウィジェットを選択することで追加していきます。追加したい機能を持つウィジェットを選択して、アプリ固有の設定は構成パネルで決めます。ウィジェットを組み合わせることで、さまざまな目的に適したアプリを作成することができます。   アプリの保存、起動
アプリを作成できたら保存して起動してみましょう。   ArcGIS Web AppBuilder (Developer Edition) ポータルサイトに組み込まれた Web AppBuilder を利用してアプリを作成するほかに、開発者向けに Developer Edition が提供されています。</description>
    </item>
    
    <item>
      <title>Arcade</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/arcade/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/arcade/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Arcade
Arcade とは ArcGIS プラットフォームで使用するために作られた軽量でセキュアな条件式のためのスクリプト言語です。 他の一般的な式言語のように、数学的な計算や評価ロジックの命令語を利用できます。 ArcGIS プラットフォームにおける独自のデータ可視化とラベル表現の作成のためにデザインされており、独自の命令語を ArcGIS Pro や ArcGIS Online、ArcGIS Runtime SDK、ArcGIS Maps SDK for JavaScript で編集・共有・実行することができます。
Arcade が他のスクリプト言語に比べてユニークなのは、ジオメトリ関数を含んでいるところです。 ジオメトリ関数は、面積や長さの計算、トポロジ リレーションシップのテスト、そしてシンプルなオーバーレイの実行を可能にします。 現在のリリースでは、ジオメトリの作成と参照が可能です。 しかし、Arcade バージョン 1.3 で導入されたジオメトリの操作は、4.x 系の ArcGIS Maps SDK for JavaScript ではサポートされていません。
Arcade バージョン 1.3 で導入されたジオメトリ関数は、4.x 系の ArcGIS Maps SDK for JavaScript ではサポートされていません。3.x 系の API では、バージョン 3.23 以上で使用できます。将来的には、4.x でのサポートを予定しています。
シンタックス Arcade のシンタックスは JavaScript ライクに変数の宣言やロジックの実行、関数の記述などができます。 しかし、二つの言語間にはいくつか異なる部分があります。 記述方法の詳細については、Arcade ドキュメント（英語）をご参照ください。 また、ArcGIS Arcade Playground では独自のスクリプトをテスト実行するための環境を提供していますので、アクセスしてみてください。</description>
    </item>
    
    <item>
      <title>スタートアップ ガイド（3.x）</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/create-startup-app-js3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/create-startup-app-js3/</guid>
      <description>サンプル プロジェクトのダウンロード このリポジトリ（arcgis-dev-resources）には開発を試してみたい方向けのサンプル コードが含まれています。ダウンロードする際の方法は 2 通りあります。
 リポジトリをご自身のアカウントに Fork（複製）   GitHub にログインして、arcgis-dev-resources ページを開いて [Fork] をクリックすると、ご自身のアカウントに同じリポジトリが作成されます。 Fork 後はご自身のローカル マシンにクローンを作成します。   zip ファイルでダウンロード（※GitHub アカウントをお持ちでない方向け）  arcgis-dev-resources ページを開いて [Download ZIP] をクリックするとプロジェクト ファイル一式が手に入ります。
地図の表示 まずはダウンロードしたサンプル コードを実行してみましょう。
  ダウンロードしたサンプル コード（arcgis-dev-resources/startup/javascript/3.x/map/index.html）を Web ブラウザーにドラッグ＆ドロップします。 Web サーバーをお持ちの方はサンプル コードを Web サーバーにホストしてアクセスすることを推奨します。http://localhost/arcgis-samples-js/simple/map.html のように localhost を指定してアクセスできます。
  この状態では地図は表示されません。サンプル コードをテキスト エディターで開いてみましょう。
  map.html 29 行目にある以下のコードの &amp;lt;Web マップ ID&amp;gt; と記載されている箇所に Web マップの作成で作成した Web マップ ID を上書きします。
  var mapDeferred = arcgisUtils.</description>
    </item>
    
    <item>
      <title>移行のヒント</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/migrate-to-components/tips-for-migrating/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/migrate-to-components/tips-for-migrating/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Tips for migrating
移行のヒント バージョン 4.30 で ArcGIS Maps SDK for JavaScript に Web コンポーネントが追加されました。 これらのコンポーネントはカスタム HTML 要素として構築されているため、最新のブラウザーで標準的に使用でき、フレームワークに依存しません。 SDKでは、コンポーネントは、API の定型コードの多くをカプセル化することにより、一般的なコーディングパターンを簡素化します。
Getting started Web コンポーネントが初めての方、あるいはこのトピックのブラッシュアップが必要な方には、役立つさまざまなリソースがあります
  すぐにコーディングを始めたい場合は、コンポーネントのチュートリアルや GitHub にあるコードサンプルを調べてみましょう。
  属性やプロパティの扱い方、変更の監視などについては、プログラミング パターンのガイド・トピックをお読みください。
  プロパティ、メソッド、イベントを確認するには、リファレンスページをご覧ください。
  JavaScript Maps SDK コンポーネントでアプリを構築するブログ (Build GIS Web Apps with the JavaScript Maps SDK components) をご覧ください。
  MDN Web Components リソースページをご覧ください。
  基本的な実装 コンポーネントを使用することで、JavaScript Maps SDK でアプリケーションを実装するたびに繰り返し必要になるコードを減らすことができます。 例えば、SDK の AMD モジュールを使用したシンプルなマップの JavaScript コードを以下に示します。</description>
    </item>
    
    <item>
      <title>移行計画</title>
      <link>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/migrate-to-components/translation-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://esrijapan.github.io/arcgis-dev-resources/tips/javascript/migrate-to-components/translation-plan/</guid>
      <description>出典：ArcGIS Maps SDK for JavaScript - Transition plan: widgets to components
移行計画：ウィジェットからコンポーネントへ JavaScript Maps SDK のコア API の &amp;lt;arcgis-map&amp;gt;&amp;lt;/arcgis-map&amp;gt; などの再利用可能なカスタム HTML 要素に拡張する標準ベースの Web コンポーネントへの置き換えが進められています。
これは、ArcGIS 製品の内部開発にも、JavaScript Maps SDK の一部として提供されるビルド済みの UI コンポーネントにも当てはまります。 現在、SDK を使用した Web アプリの構築では、コンポーネントを使用することが推奨されています。
コンポーネントのメリット このアーキテクチャーの転換は、フロントエンド Web 開発の生産性を最大化します。 カスタム 要素は、使い慣れた（HTML、CSS、JS）プログラミング エクスペリエンスを提供し、アプリケーション フレームワークとのシームレスな統合を可能にします。 さらに、ArcGIS のエクスペリエンスを Esri 製品の Web コンポーネントとしてカプセル化しているため、実績のあるワークフローを SDK の設定によって変更が可能なコンポーネントとして提供できます（すでにリリースされている Arcade Editor や チャート コンポーネントなど）。 SDK の上位レベルのコンポーネント 群は、時間の経過とともに増え続ける予定です。
ウィジェットからマップ コンポーネントへ SDK が最初に作られたとき、Web コンポーネントの規格はまだ成熟しておらず、ブラウザーに広く採用されていませんでした。 同時に、JS の状況は常に変化しているため、特定の JS フレームワークに積極的ではありませんでした。 そのため、私たちはウィジェット アーキテクチャーを開発し、開発者が Web アプリケーションで使用できるよう、時間をかけて 60 以上のウィジェットを作成しました。 Web コンポーネントの標準がすべての主要なブラウザーでサポートされるようになった今、（SDK の多くの内部でそうしているように）私たちはブラウザーとともに技術を進化させることができます。</description>
    </item>
    
  </channel>
</rss>
